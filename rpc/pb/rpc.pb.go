// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc/pb/rpc.proto

package rpcpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	pb "github.com/iost-official/go-iost/core/block/pb"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// The enumeration defines transaction receipt status code.
type TxReceipt_StatusCode int32

const (
	// success
	TxReceipt_SUCCESS TxReceipt_StatusCode = 0
	// run out of gas
	TxReceipt_GAS_RUN_OUT TxReceipt_StatusCode = 1
	// balance not enough
	TxReceipt_BALANCE_NOT_ENOUGH TxReceipt_StatusCode = 2
	// wrong parameter
	TxReceipt_WRONG_PARAMETER TxReceipt_StatusCode = 3
	// runtime error
	TxReceipt_RUNTIME_ERROR TxReceipt_StatusCode = 4
	// run out of time
	TxReceipt_TIMEOUT TxReceipt_StatusCode = 5
	// wrong transaction format
	TxReceipt_WRONG_TX_FORMAT TxReceipt_StatusCode = 6
	// more than one set code action in a transaction
	TxReceipt_DUPLICATE_SET_CODE TxReceipt_StatusCode = 7
	// unknown error
	TxReceipt_UNKNOWN_ERROR TxReceipt_StatusCode = 8
)

var TxReceipt_StatusCode_name = map[int32]string{
	0: "SUCCESS",
	1: "GAS_RUN_OUT",
	2: "BALANCE_NOT_ENOUGH",
	3: "WRONG_PARAMETER",
	4: "RUNTIME_ERROR",
	5: "TIMEOUT",
	6: "WRONG_TX_FORMAT",
	7: "DUPLICATE_SET_CODE",
	8: "UNKNOWN_ERROR",
}

var TxReceipt_StatusCode_value = map[string]int32{
	"SUCCESS":            0,
	"GAS_RUN_OUT":        1,
	"BALANCE_NOT_ENOUGH": 2,
	"WRONG_PARAMETER":    3,
	"RUNTIME_ERROR":      4,
	"TIMEOUT":            5,
	"WRONG_TX_FORMAT":    6,
	"DUPLICATE_SET_CODE": 7,
	"UNKNOWN_ERROR":      8,
}

func (x TxReceipt_StatusCode) String() string {
	return proto.EnumName(TxReceipt_StatusCode_name, int32(x))
}

func (TxReceipt_StatusCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{6, 0}
}

// The enumeration defines transaction status.
type TransactionResponse_Status int32

const (
	// pending in transaction pool
	TransactionResponse_PENDING TransactionResponse_Status = 0
	// packed in a block that has not been confirmed
	TransactionResponse_PACKED TransactionResponse_Status = 1
	// packed in a block that is irreversible
	TransactionResponse_IRREVERSIBLE TransactionResponse_Status = 2
)

var TransactionResponse_Status_name = map[int32]string{
	0: "PENDING",
	1: "PACKED",
	2: "IRREVERSIBLE",
}

var TransactionResponse_Status_value = map[string]int32{
	"PENDING":      0,
	"PACKED":       1,
	"IRREVERSIBLE": 2,
}

func (x TransactionResponse_Status) String() string {
	return proto.EnumName(TransactionResponse_Status_name, int32(x))
}

func (TransactionResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{8, 0}
}

// The enumeration defines the signature algorithm.
type Signature_Algorithm int32

const (
	// unknown
	Signature_UNKNOWN Signature_Algorithm = 0
	// secp256k1
	Signature_SECP256K1 Signature_Algorithm = 1
	// ed25519
	Signature_ED25519 Signature_Algorithm = 2
)

var Signature_Algorithm_name = map[int32]string{
	0: "UNKNOWN",
	1: "SECP256K1",
	2: "ED25519",
}

var Signature_Algorithm_value = map[string]int32{
	"UNKNOWN":   0,
	"SECP256K1": 1,
	"ED25519":   2,
}

func (x Signature_Algorithm) String() string {
	return proto.EnumName(Signature_Algorithm_name, int32(x))
}

func (Signature_Algorithm) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{9, 0}
}

// The enumeration defines block status.
type BlockResponse_Status int32

const (
	// pending in block cache
	BlockResponse_PENDING BlockResponse_Status = 0
	// irreversible
	BlockResponse_IRREVERSIBLE BlockResponse_Status = 1
)

var BlockResponse_Status_name = map[int32]string{
	0: "PENDING",
	1: "IRREVERSIBLE",
}

var BlockResponse_Status_value = map[string]int32{
	"PENDING":      0,
	"IRREVERSIBLE": 1,
}

func (x BlockResponse_Status) String() string {
	return proto.EnumName(BlockResponse_Status_name, int32(x))
}

func (BlockResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{12, 0}
}

// The enumeration defines block status.
type RawBlockResponse_Status int32

const (
	// pending in block cache
	RawBlockResponse_PENDING RawBlockResponse_Status = 0
	// irreversible
	RawBlockResponse_IRREVERSIBLE RawBlockResponse_Status = 1
)

var RawBlockResponse_Status_name = map[int32]string{
	0: "PENDING",
	1: "IRREVERSIBLE",
}

var RawBlockResponse_Status_value = map[string]int32{
	"PENDING":      0,
	"IRREVERSIBLE": 1,
}

func (x RawBlockResponse_Status) String() string {
	return proto.EnumName(RawBlockResponse_Status_name, int32(x))
}

func (RawBlockResponse_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{13, 0}
}

type ListContractStorageRequest_StorageType int32

const (
	// written by storage.put(..., ...)
	ListContractStorageRequest_KV ListContractStorageRequest_StorageType = 0
	// written by storage.mapPut(..., ..., ...)
	ListContractStorageRequest_MAP ListContractStorageRequest_StorageType = 1
)

var ListContractStorageRequest_StorageType_name = map[int32]string{
	0: "KV",
	1: "MAP",
}

var ListContractStorageRequest_StorageType_value = map[string]int32{
	"KV":  0,
	"MAP": 1,
}

func (x ListContractStorageRequest_StorageType) String() string {
	return proto.EnumName(ListContractStorageRequest_StorageType_name, int32(x))
}

func (ListContractStorageRequest_StorageType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{36, 0}
}

type Event_Topic int32

const (
	// contract receipt
	Event_CONTRACT_RECEIPT Event_Topic = 0
	// contract event
	Event_CONTRACT_EVENT Event_Topic = 1
)

var Event_Topic_name = map[int32]string{
	0: "CONTRACT_RECEIPT",
	1: "CONTRACT_EVENT",
}

var Event_Topic_value = map[string]int32{
	"CONTRACT_RECEIPT": 0,
	"CONTRACT_EVENT":   1,
}

func (x Event_Topic) String() string {
	return proto.EnumName(Event_Topic_name, int32(x))
}

func (Event_Topic) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{45, 0}
}

// The message defines an empty request.
type EmptyRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyRequest) Reset()         { *m = EmptyRequest{} }
func (m *EmptyRequest) String() string { return proto.CompactTextString(m) }
func (*EmptyRequest) ProtoMessage()    {}
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{0}
}

func (m *EmptyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyRequest.Unmarshal(m, b)
}
func (m *EmptyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyRequest.Marshal(b, m, deterministic)
}
func (m *EmptyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyRequest.Merge(m, src)
}
func (m *EmptyRequest) XXX_Size() int {
	return xxx_messageInfo_EmptyRequest.Size(m)
}
func (m *EmptyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyRequest proto.InternalMessageInfo

// The message defines network connection information.
type NetworkInfo struct {
	// local network ID
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// peer connection count
	PeerCount            int32    `protobuf:"varint,2,opt,name=peer_count,json=peerCount,proto3" json:"peer_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NetworkInfo) Reset()         { *m = NetworkInfo{} }
func (m *NetworkInfo) String() string { return proto.CompactTextString(m) }
func (*NetworkInfo) ProtoMessage()    {}
func (*NetworkInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{1}
}

func (m *NetworkInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NetworkInfo.Unmarshal(m, b)
}
func (m *NetworkInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NetworkInfo.Marshal(b, m, deterministic)
}
func (m *NetworkInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NetworkInfo.Merge(m, src)
}
func (m *NetworkInfo) XXX_Size() int {
	return xxx_messageInfo_NetworkInfo.Size(m)
}
func (m *NetworkInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_NetworkInfo.DiscardUnknown(m)
}

var xxx_messageInfo_NetworkInfo proto.InternalMessageInfo

func (m *NetworkInfo) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *NetworkInfo) GetPeerCount() int32 {
	if m != nil {
		return m.PeerCount
	}
	return 0
}

// The message containing blockchain's ram information.
type RAMInfoResponse struct {
	// how many bytes have been used
	UsedRam int64 `protobuf:"varint,1,opt,name=used_ram,json=usedRam,proto3" json:"used_ram,omitempty"`
	// how many bytes have not been used
	AvailableRam int64 `protobuf:"varint,2,opt,name=available_ram,json=availableRam,proto3" json:"available_ram,omitempty"`
	// total ram byte
	TotalRam int64 `protobuf:"varint,3,opt,name=total_ram,json=totalRam,proto3" json:"total_ram,omitempty"`
	// User can sell NUM bytes RAM to system to get `NUM * sell_price` IOSTs
	SellPrice float64 `protobuf:"fixed64,4,opt,name=sell_price,json=sellPrice,proto3" json:"sell_price,omitempty"`
	// User can spend approximate `NUM * buy_price` IOSTs for NUM bytes RAM
	BuyPrice             float64  `protobuf:"fixed64,5,opt,name=buy_price,json=buyPrice,proto3" json:"buy_price,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RAMInfoResponse) Reset()         { *m = RAMInfoResponse{} }
func (m *RAMInfoResponse) String() string { return proto.CompactTextString(m) }
func (*RAMInfoResponse) ProtoMessage()    {}
func (*RAMInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{2}
}

func (m *RAMInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RAMInfoResponse.Unmarshal(m, b)
}
func (m *RAMInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RAMInfoResponse.Marshal(b, m, deterministic)
}
func (m *RAMInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RAMInfoResponse.Merge(m, src)
}
func (m *RAMInfoResponse) XXX_Size() int {
	return xxx_messageInfo_RAMInfoResponse.Size(m)
}
func (m *RAMInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RAMInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RAMInfoResponse proto.InternalMessageInfo

func (m *RAMInfoResponse) GetUsedRam() int64 {
	if m != nil {
		return m.UsedRam
	}
	return 0
}

func (m *RAMInfoResponse) GetAvailableRam() int64 {
	if m != nil {
		return m.AvailableRam
	}
	return 0
}

func (m *RAMInfoResponse) GetTotalRam() int64 {
	if m != nil {
		return m.TotalRam
	}
	return 0
}

func (m *RAMInfoResponse) GetSellPrice() float64 {
	if m != nil {
		return m.SellPrice
	}
	return 0
}

func (m *RAMInfoResponse) GetBuyPrice() float64 {
	if m != nil {
		return m.BuyPrice
	}
	return 0
}

// The message containing the node's information.
type NodeInfoResponse struct {
	// build time
	BuildTime string `protobuf:"bytes,1,opt,name=build_time,json=buildTime,proto3" json:"build_time,omitempty"`
	// git hash
	GitHash string `protobuf:"bytes,2,opt,name=git_hash,json=gitHash,proto3" json:"git_hash,omitempty"`
	// node mode
	Mode string `protobuf:"bytes,3,opt,name=mode,proto3" json:"mode,omitempty"`
	// network connection information
	Network *NetworkInfo `protobuf:"bytes,4,opt,name=network,proto3" json:"network,omitempty"`
	// code version string
	CodeVersion string `protobuf:"bytes,5,opt,name=code_version,json=codeVersion,proto3" json:"code_version,omitempty"`
	// server time
	ServerTime           int64    `protobuf:"varint,6,opt,name=server_time,json=serverTime,proto3" json:"server_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NodeInfoResponse) Reset()         { *m = NodeInfoResponse{} }
func (m *NodeInfoResponse) String() string { return proto.CompactTextString(m) }
func (*NodeInfoResponse) ProtoMessage()    {}
func (*NodeInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{3}
}

func (m *NodeInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NodeInfoResponse.Unmarshal(m, b)
}
func (m *NodeInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NodeInfoResponse.Marshal(b, m, deterministic)
}
func (m *NodeInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NodeInfoResponse.Merge(m, src)
}
func (m *NodeInfoResponse) XXX_Size() int {
	return xxx_messageInfo_NodeInfoResponse.Size(m)
}
func (m *NodeInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NodeInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NodeInfoResponse proto.InternalMessageInfo

func (m *NodeInfoResponse) GetBuildTime() string {
	if m != nil {
		return m.BuildTime
	}
	return ""
}

func (m *NodeInfoResponse) GetGitHash() string {
	if m != nil {
		return m.GitHash
	}
	return ""
}

func (m *NodeInfoResponse) GetMode() string {
	if m != nil {
		return m.Mode
	}
	return ""
}

func (m *NodeInfoResponse) GetNetwork() *NetworkInfo {
	if m != nil {
		return m.Network
	}
	return nil
}

func (m *NodeInfoResponse) GetCodeVersion() string {
	if m != nil {
		return m.CodeVersion
	}
	return ""
}

func (m *NodeInfoResponse) GetServerTime() int64 {
	if m != nil {
		return m.ServerTime
	}
	return 0
}

// The message defines transaction amount limit struct.
type AmountLimit struct {
	// token name
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// limit value
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AmountLimit) Reset()         { *m = AmountLimit{} }
func (m *AmountLimit) String() string { return proto.CompactTextString(m) }
func (*AmountLimit) ProtoMessage()    {}
func (*AmountLimit) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{4}
}

func (m *AmountLimit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AmountLimit.Unmarshal(m, b)
}
func (m *AmountLimit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AmountLimit.Marshal(b, m, deterministic)
}
func (m *AmountLimit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AmountLimit.Merge(m, src)
}
func (m *AmountLimit) XXX_Size() int {
	return xxx_messageInfo_AmountLimit.Size(m)
}
func (m *AmountLimit) XXX_DiscardUnknown() {
	xxx_messageInfo_AmountLimit.DiscardUnknown(m)
}

var xxx_messageInfo_AmountLimit proto.InternalMessageInfo

func (m *AmountLimit) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *AmountLimit) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// The message defines transaction action struct.
type Action struct {
	// contract name
	Contract string `protobuf:"bytes,1,opt,name=contract,proto3" json:"contract,omitempty"`
	// action name
	ActionName string `protobuf:"bytes,2,opt,name=action_name,json=actionName,proto3" json:"action_name,omitempty"`
	// data
	Data                 string   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Action) Reset()         { *m = Action{} }
func (m *Action) String() string { return proto.CompactTextString(m) }
func (*Action) ProtoMessage()    {}
func (*Action) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{5}
}

func (m *Action) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Action.Unmarshal(m, b)
}
func (m *Action) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Action.Marshal(b, m, deterministic)
}
func (m *Action) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Action.Merge(m, src)
}
func (m *Action) XXX_Size() int {
	return xxx_messageInfo_Action.Size(m)
}
func (m *Action) XXX_DiscardUnknown() {
	xxx_messageInfo_Action.DiscardUnknown(m)
}

var xxx_messageInfo_Action proto.InternalMessageInfo

func (m *Action) GetContract() string {
	if m != nil {
		return m.Contract
	}
	return ""
}

func (m *Action) GetActionName() string {
	if m != nil {
		return m.ActionName
	}
	return ""
}

func (m *Action) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

// The message defines the transaction receipt struct.
type TxReceipt struct {
	// transaction hash
	TxHash string `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	// gas usage
	GasUsage float64 `protobuf:"fixed64,2,opt,name=gas_usage,json=gasUsage,proto3" json:"gas_usage,omitempty"`
	// ram usage
	RamUsage map[string]int64 `protobuf:"bytes,3,rep,name=ram_usage,json=ramUsage,proto3" json:"ram_usage,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	// status code
	StatusCode TxReceipt_StatusCode `protobuf:"varint,4,opt,name=status_code,json=statusCode,proto3,enum=rpcpb.TxReceipt_StatusCode" json:"status_code,omitempty"`
	// message
	Message string `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	// transaction returns
	Returns []string `protobuf:"bytes,6,rep,name=returns,proto3" json:"returns,omitempty"`
	// transaction receipts
	Receipts             []*TxReceipt_Receipt `protobuf:"bytes,7,rep,name=receipts,proto3" json:"receipts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TxReceipt) Reset()         { *m = TxReceipt{} }
func (m *TxReceipt) String() string { return proto.CompactTextString(m) }
func (*TxReceipt) ProtoMessage()    {}
func (*TxReceipt) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{6}
}

func (m *TxReceipt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxReceipt.Unmarshal(m, b)
}
func (m *TxReceipt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxReceipt.Marshal(b, m, deterministic)
}
func (m *TxReceipt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxReceipt.Merge(m, src)
}
func (m *TxReceipt) XXX_Size() int {
	return xxx_messageInfo_TxReceipt.Size(m)
}
func (m *TxReceipt) XXX_DiscardUnknown() {
	xxx_messageInfo_TxReceipt.DiscardUnknown(m)
}

var xxx_messageInfo_TxReceipt proto.InternalMessageInfo

func (m *TxReceipt) GetTxHash() string {
	if m != nil {
		return m.TxHash
	}
	return ""
}

func (m *TxReceipt) GetGasUsage() float64 {
	if m != nil {
		return m.GasUsage
	}
	return 0
}

func (m *TxReceipt) GetRamUsage() map[string]int64 {
	if m != nil {
		return m.RamUsage
	}
	return nil
}

func (m *TxReceipt) GetStatusCode() TxReceipt_StatusCode {
	if m != nil {
		return m.StatusCode
	}
	return TxReceipt_SUCCESS
}

func (m *TxReceipt) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *TxReceipt) GetReturns() []string {
	if m != nil {
		return m.Returns
	}
	return nil
}

func (m *TxReceipt) GetReceipts() []*TxReceipt_Receipt {
	if m != nil {
		return m.Receipts
	}
	return nil
}

// The message defines transaction execution receipt.
type TxReceipt_Receipt struct {
	// function name
	FuncName string `protobuf:"bytes,1,opt,name=func_name,json=funcName,proto3" json:"func_name,omitempty"`
	// content
	Content              string   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxReceipt_Receipt) Reset()         { *m = TxReceipt_Receipt{} }
func (m *TxReceipt_Receipt) String() string { return proto.CompactTextString(m) }
func (*TxReceipt_Receipt) ProtoMessage()    {}
func (*TxReceipt_Receipt) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{6, 1}
}

func (m *TxReceipt_Receipt) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxReceipt_Receipt.Unmarshal(m, b)
}
func (m *TxReceipt_Receipt) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxReceipt_Receipt.Marshal(b, m, deterministic)
}
func (m *TxReceipt_Receipt) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxReceipt_Receipt.Merge(m, src)
}
func (m *TxReceipt_Receipt) XXX_Size() int {
	return xxx_messageInfo_TxReceipt_Receipt.Size(m)
}
func (m *TxReceipt_Receipt) XXX_DiscardUnknown() {
	xxx_messageInfo_TxReceipt_Receipt.DiscardUnknown(m)
}

var xxx_messageInfo_TxReceipt_Receipt proto.InternalMessageInfo

func (m *TxReceipt_Receipt) GetFuncName() string {
	if m != nil {
		return m.FuncName
	}
	return ""
}

func (m *TxReceipt_Receipt) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

// The message defines transaction struct.
type Transaction struct {
	// transaction hash
	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	// transaction timestamp
	Time int64 `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	// expiration timestamp
	Expiration int64 `protobuf:"varint,3,opt,name=expiration,proto3" json:"expiration,omitempty"`
	// gas gas_ratio
	GasRatio float64 `protobuf:"fixed64,4,opt,name=gas_ratio,json=gasRatio,proto3" json:"gas_ratio,omitempty"`
	// gas limit
	GasLimit float64 `protobuf:"fixed64,5,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
	// delay nanoseconds
	Delay int64 `protobuf:"varint,6,opt,name=delay,proto3" json:"delay,omitempty"`
	// chain id
	ChainId uint32 `protobuf:"varint,7,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	// action list
	Actions []*Action `protobuf:"bytes,8,rep,name=actions,proto3" json:"actions,omitempty"`
	// signer list
	Signers []string `protobuf:"bytes,9,rep,name=signers,proto3" json:"signers,omitempty"`
	// publisher
	Publisher string `protobuf:"bytes,10,opt,name=publisher,proto3" json:"publisher,omitempty"`
	// referred transaction hash
	ReferredTx string `protobuf:"bytes,11,opt,name=referred_tx,json=referredTx,proto3" json:"referred_tx,omitempty"`
	// amount limit
	AmountLimit []*AmountLimit `protobuf:"bytes,12,rep,name=amount_limit,json=amountLimit,proto3" json:"amount_limit,omitempty"`
	// transaction receipt
	TxReceipt            *TxReceipt `protobuf:"bytes,13,opt,name=tx_receipt,json=txReceipt,proto3" json:"tx_receipt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}
func (*Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{7}
}

func (m *Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction.Unmarshal(m, b)
}
func (m *Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction.Marshal(b, m, deterministic)
}
func (m *Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction.Merge(m, src)
}
func (m *Transaction) XXX_Size() int {
	return xxx_messageInfo_Transaction.Size(m)
}
func (m *Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction proto.InternalMessageInfo

func (m *Transaction) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *Transaction) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *Transaction) GetExpiration() int64 {
	if m != nil {
		return m.Expiration
	}
	return 0
}

func (m *Transaction) GetGasRatio() float64 {
	if m != nil {
		return m.GasRatio
	}
	return 0
}

func (m *Transaction) GetGasLimit() float64 {
	if m != nil {
		return m.GasLimit
	}
	return 0
}

func (m *Transaction) GetDelay() int64 {
	if m != nil {
		return m.Delay
	}
	return 0
}

func (m *Transaction) GetChainId() uint32 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

func (m *Transaction) GetActions() []*Action {
	if m != nil {
		return m.Actions
	}
	return nil
}

func (m *Transaction) GetSigners() []string {
	if m != nil {
		return m.Signers
	}
	return nil
}

func (m *Transaction) GetPublisher() string {
	if m != nil {
		return m.Publisher
	}
	return ""
}

func (m *Transaction) GetReferredTx() string {
	if m != nil {
		return m.ReferredTx
	}
	return ""
}

func (m *Transaction) GetAmountLimit() []*AmountLimit {
	if m != nil {
		return m.AmountLimit
	}
	return nil
}

func (m *Transaction) GetTxReceipt() *TxReceipt {
	if m != nil {
		return m.TxReceipt
	}
	return nil
}

// The message defines transaction response.
type TransactionResponse struct {
	// transaction status
	Status TransactionResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=rpcpb.TransactionResponse_Status" json:"status,omitempty"`
	// transaction
	Transaction *Transaction `protobuf:"bytes,2,opt,name=transaction,proto3" json:"transaction,omitempty"`
	// block number
	BlockNumber          int64    `protobuf:"varint,3,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TransactionResponse) Reset()         { *m = TransactionResponse{} }
func (m *TransactionResponse) String() string { return proto.CompactTextString(m) }
func (*TransactionResponse) ProtoMessage()    {}
func (*TransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{8}
}

func (m *TransactionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionResponse.Unmarshal(m, b)
}
func (m *TransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionResponse.Marshal(b, m, deterministic)
}
func (m *TransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionResponse.Merge(m, src)
}
func (m *TransactionResponse) XXX_Size() int {
	return xxx_messageInfo_TransactionResponse.Size(m)
}
func (m *TransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionResponse proto.InternalMessageInfo

func (m *TransactionResponse) GetStatus() TransactionResponse_Status {
	if m != nil {
		return m.Status
	}
	return TransactionResponse_PENDING
}

func (m *TransactionResponse) GetTransaction() *Transaction {
	if m != nil {
		return m.Transaction
	}
	return nil
}

func (m *TransactionResponse) GetBlockNumber() int64 {
	if m != nil {
		return m.BlockNumber
	}
	return 0
}

// The message defines signature struct.
type Signature struct {
	// signature algorithm
	Algorithm Signature_Algorithm `protobuf:"varint,1,opt,name=algorithm,proto3,enum=rpcpb.Signature_Algorithm" json:"algorithm,omitempty"`
	// signature bytes
	Signature []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	// public key
	PublicKey            []byte   `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Signature) Reset()         { *m = Signature{} }
func (m *Signature) String() string { return proto.CompactTextString(m) }
func (*Signature) ProtoMessage()    {}
func (*Signature) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{9}
}

func (m *Signature) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Signature.Unmarshal(m, b)
}
func (m *Signature) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Signature.Marshal(b, m, deterministic)
}
func (m *Signature) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Signature.Merge(m, src)
}
func (m *Signature) XXX_Size() int {
	return xxx_messageInfo_Signature.Size(m)
}
func (m *Signature) XXX_DiscardUnknown() {
	xxx_messageInfo_Signature.DiscardUnknown(m)
}

var xxx_messageInfo_Signature proto.InternalMessageInfo

func (m *Signature) GetAlgorithm() Signature_Algorithm {
	if m != nil {
		return m.Algorithm
	}
	return Signature_UNKNOWN
}

func (m *Signature) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *Signature) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

// The message defines the transaction request.
type TransactionRequest struct {
	// transaction timestamp
	Time int64 `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	// expiration timestamp
	Expiration int64 `protobuf:"varint,2,opt,name=expiration,proto3" json:"expiration,omitempty"`
	// gas price
	GasRatio float64 `protobuf:"fixed64,3,opt,name=gas_ratio,json=gasRatio,proto3" json:"gas_ratio,omitempty"`
	// gas limit
	GasLimit float64 `protobuf:"fixed64,4,opt,name=gas_limit,json=gasLimit,proto3" json:"gas_limit,omitempty"`
	// delay nanoseconds
	Delay int64 `protobuf:"varint,5,opt,name=delay,proto3" json:"delay,omitempty"`
	// chain id
	ChainId uint32 `protobuf:"varint,6,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	// action list
	Actions []*Action `protobuf:"bytes,7,rep,name=actions,proto3" json:"actions,omitempty"`
	// amount limit
	AmountLimit []*AmountLimit `protobuf:"bytes,8,rep,name=amount_limit,json=amountLimit,proto3" json:"amount_limit,omitempty"`
	// signer list
	Signers []string `protobuf:"bytes,9,rep,name=signers,proto3" json:"signers,omitempty"`
	// signatures of signers
	Signatures []*Signature `protobuf:"bytes,10,rep,name=signatures,proto3" json:"signatures,omitempty"`
	// publisher
	Publisher string `protobuf:"bytes,11,opt,name=publisher,proto3" json:"publisher,omitempty"`
	// signatures of publisher
	PublisherSigs        []*Signature `protobuf:"bytes,12,rep,name=publisher_sigs,json=publisherSigs,proto3" json:"publisher_sigs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *TransactionRequest) Reset()         { *m = TransactionRequest{} }
func (m *TransactionRequest) String() string { return proto.CompactTextString(m) }
func (*TransactionRequest) ProtoMessage()    {}
func (*TransactionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{10}
}

func (m *TransactionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionRequest.Unmarshal(m, b)
}
func (m *TransactionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionRequest.Marshal(b, m, deterministic)
}
func (m *TransactionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionRequest.Merge(m, src)
}
func (m *TransactionRequest) XXX_Size() int {
	return xxx_messageInfo_TransactionRequest.Size(m)
}
func (m *TransactionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionRequest proto.InternalMessageInfo

func (m *TransactionRequest) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *TransactionRequest) GetExpiration() int64 {
	if m != nil {
		return m.Expiration
	}
	return 0
}

func (m *TransactionRequest) GetGasRatio() float64 {
	if m != nil {
		return m.GasRatio
	}
	return 0
}

func (m *TransactionRequest) GetGasLimit() float64 {
	if m != nil {
		return m.GasLimit
	}
	return 0
}

func (m *TransactionRequest) GetDelay() int64 {
	if m != nil {
		return m.Delay
	}
	return 0
}

func (m *TransactionRequest) GetChainId() uint32 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

func (m *TransactionRequest) GetActions() []*Action {
	if m != nil {
		return m.Actions
	}
	return nil
}

func (m *TransactionRequest) GetAmountLimit() []*AmountLimit {
	if m != nil {
		return m.AmountLimit
	}
	return nil
}

func (m *TransactionRequest) GetSigners() []string {
	if m != nil {
		return m.Signers
	}
	return nil
}

func (m *TransactionRequest) GetSignatures() []*Signature {
	if m != nil {
		return m.Signatures
	}
	return nil
}

func (m *TransactionRequest) GetPublisher() string {
	if m != nil {
		return m.Publisher
	}
	return ""
}

func (m *TransactionRequest) GetPublisherSigs() []*Signature {
	if m != nil {
		return m.PublisherSigs
	}
	return nil
}

// The message defines the block struct.
type Block struct {
	// block hash
	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	// block version
	Version int64 `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	// parent block hash
	ParentHash string `protobuf:"bytes,3,opt,name=parent_hash,json=parentHash,proto3" json:"parent_hash,omitempty"`
	// transaction merkle tree root hash
	TxMerkleHash string `protobuf:"bytes,4,opt,name=tx_merkle_hash,json=txMerkleHash,proto3" json:"tx_merkle_hash,omitempty"`
	// transaction receipt merkle tree root hash
	TxReceiptMerkleHash string `protobuf:"bytes,5,opt,name=tx_receipt_merkle_hash,json=txReceiptMerkleHash,proto3" json:"tx_receipt_merkle_hash,omitempty"`
	// block number
	Number int64 `protobuf:"varint,6,opt,name=number,proto3" json:"number,omitempty"`
	// block producer witness
	Witness string `protobuf:"bytes,7,opt,name=witness,proto3" json:"witness,omitempty"`
	// block timestamp
	Time int64 `protobuf:"varint,8,opt,name=time,proto3" json:"time,omitempty"`
	// block gas usage
	GasUsage float64 `protobuf:"fixed64,9,opt,name=gas_usage,json=gasUsage,proto3" json:"gas_usage,omitempty"`
	// transaction count
	TxCount int64 `protobuf:"varint,10,opt,name=tx_count,json=txCount,proto3" json:"tx_count,omitempty"`
	// extra information
	Info *Block_Info `protobuf:"bytes,11,opt,name=info,proto3" json:"info,omitempty"`
	// original info bytes
	OrigInfo string `protobuf:"bytes,13,opt,name=orig_info,json=origInfo,proto3" json:"orig_info,omitempty"`
	// block transactions
	Transactions         []*Transaction `protobuf:"bytes,12,rep,name=transactions,proto3" json:"transactions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Block) Reset()         { *m = Block{} }
func (m *Block) String() string { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()    {}
func (*Block) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{11}
}

func (m *Block) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block.Unmarshal(m, b)
}
func (m *Block) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block.Marshal(b, m, deterministic)
}
func (m *Block) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block.Merge(m, src)
}
func (m *Block) XXX_Size() int {
	return xxx_messageInfo_Block.Size(m)
}
func (m *Block) XXX_DiscardUnknown() {
	xxx_messageInfo_Block.DiscardUnknown(m)
}

var xxx_messageInfo_Block proto.InternalMessageInfo

func (m *Block) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *Block) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Block) GetParentHash() string {
	if m != nil {
		return m.ParentHash
	}
	return ""
}

func (m *Block) GetTxMerkleHash() string {
	if m != nil {
		return m.TxMerkleHash
	}
	return ""
}

func (m *Block) GetTxReceiptMerkleHash() string {
	if m != nil {
		return m.TxReceiptMerkleHash
	}
	return ""
}

func (m *Block) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *Block) GetWitness() string {
	if m != nil {
		return m.Witness
	}
	return ""
}

func (m *Block) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *Block) GetGasUsage() float64 {
	if m != nil {
		return m.GasUsage
	}
	return 0
}

func (m *Block) GetTxCount() int64 {
	if m != nil {
		return m.TxCount
	}
	return 0
}

func (m *Block) GetInfo() *Block_Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *Block) GetOrigInfo() string {
	if m != nil {
		return m.OrigInfo
	}
	return ""
}

func (m *Block) GetTransactions() []*Transaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

// The message defines block extra information
type Block_Info struct {
	// pack mode
	Mode int32 `protobuf:"varint,1,opt,name=mode,proto3" json:"mode,omitempty"`
	// transaction execution thread number
	Thread int32 `protobuf:"varint,2,opt,name=thread,proto3" json:"thread,omitempty"`
	// transaction index of every batch execution
	BatchIndex           []int32  `protobuf:"varint,3,rep,packed,name=batch_index,json=batchIndex,proto3" json:"batch_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Block_Info) Reset()         { *m = Block_Info{} }
func (m *Block_Info) String() string { return proto.CompactTextString(m) }
func (*Block_Info) ProtoMessage()    {}
func (*Block_Info) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{11, 0}
}

func (m *Block_Info) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block_Info.Unmarshal(m, b)
}
func (m *Block_Info) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block_Info.Marshal(b, m, deterministic)
}
func (m *Block_Info) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block_Info.Merge(m, src)
}
func (m *Block_Info) XXX_Size() int {
	return xxx_messageInfo_Block_Info.Size(m)
}
func (m *Block_Info) XXX_DiscardUnknown() {
	xxx_messageInfo_Block_Info.DiscardUnknown(m)
}

var xxx_messageInfo_Block_Info proto.InternalMessageInfo

func (m *Block_Info) GetMode() int32 {
	if m != nil {
		return m.Mode
	}
	return 0
}

func (m *Block_Info) GetThread() int32 {
	if m != nil {
		return m.Thread
	}
	return 0
}

func (m *Block_Info) GetBatchIndex() []int32 {
	if m != nil {
		return m.BatchIndex
	}
	return nil
}

type BlockResponse struct {
	// transaction status
	Status BlockResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=rpcpb.BlockResponse_Status" json:"status,omitempty"`
	// block
	Block                *Block   `protobuf:"bytes,2,opt,name=block,proto3" json:"block,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockResponse) Reset()         { *m = BlockResponse{} }
func (m *BlockResponse) String() string { return proto.CompactTextString(m) }
func (*BlockResponse) ProtoMessage()    {}
func (*BlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{12}
}

func (m *BlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockResponse.Unmarshal(m, b)
}
func (m *BlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockResponse.Marshal(b, m, deterministic)
}
func (m *BlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockResponse.Merge(m, src)
}
func (m *BlockResponse) XXX_Size() int {
	return xxx_messageInfo_BlockResponse.Size(m)
}
func (m *BlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BlockResponse proto.InternalMessageInfo

func (m *BlockResponse) GetStatus() BlockResponse_Status {
	if m != nil {
		return m.Status
	}
	return BlockResponse_PENDING
}

func (m *BlockResponse) GetBlock() *Block {
	if m != nil {
		return m.Block
	}
	return nil
}

type RawBlockResponse struct {
	// transaction status
	Status RawBlockResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=rpcpb.RawBlockResponse_Status" json:"status,omitempty"`
	// block
	Block                *pb.Block `protobuf:"bytes,2,opt,name=block,proto3" json:"block,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *RawBlockResponse) Reset()         { *m = RawBlockResponse{} }
func (m *RawBlockResponse) String() string { return proto.CompactTextString(m) }
func (*RawBlockResponse) ProtoMessage()    {}
func (*RawBlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{13}
}

func (m *RawBlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RawBlockResponse.Unmarshal(m, b)
}
func (m *RawBlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RawBlockResponse.Marshal(b, m, deterministic)
}
func (m *RawBlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RawBlockResponse.Merge(m, src)
}
func (m *RawBlockResponse) XXX_Size() int {
	return xxx_messageInfo_RawBlockResponse.Size(m)
}
func (m *RawBlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RawBlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RawBlockResponse proto.InternalMessageInfo

func (m *RawBlockResponse) GetStatus() RawBlockResponse_Status {
	if m != nil {
		return m.Status
	}
	return RawBlockResponse_PENDING
}

func (m *RawBlockResponse) GetBlock() *pb.Block {
	if m != nil {
		return m.Block
	}
	return nil
}

type BlockHeaderByRangeResponse struct {
	BlockList            []*pb.Block `protobuf:"bytes,1,rep,name=block_list,json=blockList,proto3" json:"block_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *BlockHeaderByRangeResponse) Reset()         { *m = BlockHeaderByRangeResponse{} }
func (m *BlockHeaderByRangeResponse) String() string { return proto.CompactTextString(m) }
func (*BlockHeaderByRangeResponse) ProtoMessage()    {}
func (*BlockHeaderByRangeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{14}
}

func (m *BlockHeaderByRangeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockHeaderByRangeResponse.Unmarshal(m, b)
}
func (m *BlockHeaderByRangeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockHeaderByRangeResponse.Marshal(b, m, deterministic)
}
func (m *BlockHeaderByRangeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockHeaderByRangeResponse.Merge(m, src)
}
func (m *BlockHeaderByRangeResponse) XXX_Size() int {
	return xxx_messageInfo_BlockHeaderByRangeResponse.Size(m)
}
func (m *BlockHeaderByRangeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockHeaderByRangeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BlockHeaderByRangeResponse proto.InternalMessageInfo

func (m *BlockHeaderByRangeResponse) GetBlockList() []*pb.Block {
	if m != nil {
		return m.BlockList
	}
	return nil
}

// The message defines chain information response.
type ChainInfoResponse struct {
	// the name of network, such mainnet or testnet
	NetName string `protobuf:"bytes,1,opt,name=net_name,json=netName,proto3" json:"net_name,omitempty"`
	// the iost protocol version
	ProtocolVersion string `protobuf:"bytes,2,opt,name=protocol_version,json=protocolVersion,proto3" json:"protocol_version,omitempty"`
	// chain id
	ChainId uint32 `protobuf:"varint,3,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	// head block height
	HeadBlock int64 `protobuf:"varint,4,opt,name=head_block,json=headBlock,proto3" json:"head_block,omitempty"`
	// head block hash
	HeadBlockHash string `protobuf:"bytes,5,opt,name=head_block_hash,json=headBlockHash,proto3" json:"head_block_hash,omitempty"`
	// last irreversible block number
	LibBlock int64 `protobuf:"varint,6,opt,name=lib_block,json=libBlock,proto3" json:"lib_block,omitempty"`
	// last irreversible block hash
	LibBlockHash string `protobuf:"bytes,7,opt,name=lib_block_hash,json=libBlockHash,proto3" json:"lib_block_hash,omitempty"`
	// the current witness list
	WitnessList []string `protobuf:"bytes,8,rep,name=witness_list,json=witnessList,proto3" json:"witness_list,omitempty"`
	// the active witness list of lat irreversible block
	LibWitnessList []string `protobuf:"bytes,9,rep,name=lib_witness_list,json=libWitnessList,proto3" json:"lib_witness_list,omitempty"`
	// the pending witness list
	PendingWitnessList []string `protobuf:"bytes,10,rep,name=pending_witness_list,json=pendingWitnessList,proto3" json:"pending_witness_list,omitempty"`
	// the head block time
	HeadBlockTime int64 `protobuf:"varint,11,opt,name=head_block_time,json=headBlockTime,proto3" json:"head_block_time,omitempty"`
	// the last irreversible block time
	LibBlockTime         int64    `protobuf:"varint,12,opt,name=lib_block_time,json=libBlockTime,proto3" json:"lib_block_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChainInfoResponse) Reset()         { *m = ChainInfoResponse{} }
func (m *ChainInfoResponse) String() string { return proto.CompactTextString(m) }
func (*ChainInfoResponse) ProtoMessage()    {}
func (*ChainInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{15}
}

func (m *ChainInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChainInfoResponse.Unmarshal(m, b)
}
func (m *ChainInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChainInfoResponse.Marshal(b, m, deterministic)
}
func (m *ChainInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChainInfoResponse.Merge(m, src)
}
func (m *ChainInfoResponse) XXX_Size() int {
	return xxx_messageInfo_ChainInfoResponse.Size(m)
}
func (m *ChainInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChainInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChainInfoResponse proto.InternalMessageInfo

func (m *ChainInfoResponse) GetNetName() string {
	if m != nil {
		return m.NetName
	}
	return ""
}

func (m *ChainInfoResponse) GetProtocolVersion() string {
	if m != nil {
		return m.ProtocolVersion
	}
	return ""
}

func (m *ChainInfoResponse) GetChainId() uint32 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

func (m *ChainInfoResponse) GetHeadBlock() int64 {
	if m != nil {
		return m.HeadBlock
	}
	return 0
}

func (m *ChainInfoResponse) GetHeadBlockHash() string {
	if m != nil {
		return m.HeadBlockHash
	}
	return ""
}

func (m *ChainInfoResponse) GetLibBlock() int64 {
	if m != nil {
		return m.LibBlock
	}
	return 0
}

func (m *ChainInfoResponse) GetLibBlockHash() string {
	if m != nil {
		return m.LibBlockHash
	}
	return ""
}

func (m *ChainInfoResponse) GetWitnessList() []string {
	if m != nil {
		return m.WitnessList
	}
	return nil
}

func (m *ChainInfoResponse) GetLibWitnessList() []string {
	if m != nil {
		return m.LibWitnessList
	}
	return nil
}

func (m *ChainInfoResponse) GetPendingWitnessList() []string {
	if m != nil {
		return m.PendingWitnessList
	}
	return nil
}

func (m *ChainInfoResponse) GetHeadBlockTime() int64 {
	if m != nil {
		return m.HeadBlockTime
	}
	return 0
}

func (m *ChainInfoResponse) GetLibBlockTime() int64 {
	if m != nil {
		return m.LibBlockTime
	}
	return 0
}

// The request message containing the tx's hash.
type TxHashRequest struct {
	// tx hash
	Hash                 string   `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TxHashRequest) Reset()         { *m = TxHashRequest{} }
func (m *TxHashRequest) String() string { return proto.CompactTextString(m) }
func (*TxHashRequest) ProtoMessage()    {}
func (*TxHashRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{16}
}

func (m *TxHashRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxHashRequest.Unmarshal(m, b)
}
func (m *TxHashRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxHashRequest.Marshal(b, m, deterministic)
}
func (m *TxHashRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxHashRequest.Merge(m, src)
}
func (m *TxHashRequest) XXX_Size() int {
	return xxx_messageInfo_TxHashRequest.Size(m)
}
func (m *TxHashRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TxHashRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TxHashRequest proto.InternalMessageInfo

func (m *TxHashRequest) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

// The request message containing the block's hash.
type GetBlockByHashRequest struct {
	// block hash
	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	// complete means whether including the full transactions and transaction receipts
	Complete             bool     `protobuf:"varint,2,opt,name=complete,proto3" json:"complete,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockByHashRequest) Reset()         { *m = GetBlockByHashRequest{} }
func (m *GetBlockByHashRequest) String() string { return proto.CompactTextString(m) }
func (*GetBlockByHashRequest) ProtoMessage()    {}
func (*GetBlockByHashRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{17}
}

func (m *GetBlockByHashRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockByHashRequest.Unmarshal(m, b)
}
func (m *GetBlockByHashRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockByHashRequest.Marshal(b, m, deterministic)
}
func (m *GetBlockByHashRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockByHashRequest.Merge(m, src)
}
func (m *GetBlockByHashRequest) XXX_Size() int {
	return xxx_messageInfo_GetBlockByHashRequest.Size(m)
}
func (m *GetBlockByHashRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockByHashRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockByHashRequest proto.InternalMessageInfo

func (m *GetBlockByHashRequest) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *GetBlockByHashRequest) GetComplete() bool {
	if m != nil {
		return m.Complete
	}
	return false
}

// The request message containing the block's number.
type GetBlockByNumberRequest struct {
	// block number
	Number int64 `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	// complete means whether including the full transactions and transaction receipts
	Complete             bool     `protobuf:"varint,2,opt,name=complete,proto3" json:"complete,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockByNumberRequest) Reset()         { *m = GetBlockByNumberRequest{} }
func (m *GetBlockByNumberRequest) String() string { return proto.CompactTextString(m) }
func (*GetBlockByNumberRequest) ProtoMessage()    {}
func (*GetBlockByNumberRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{18}
}

func (m *GetBlockByNumberRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockByNumberRequest.Unmarshal(m, b)
}
func (m *GetBlockByNumberRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockByNumberRequest.Marshal(b, m, deterministic)
}
func (m *GetBlockByNumberRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockByNumberRequest.Merge(m, src)
}
func (m *GetBlockByNumberRequest) XXX_Size() int {
	return xxx_messageInfo_GetBlockByNumberRequest.Size(m)
}
func (m *GetBlockByNumberRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockByNumberRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockByNumberRequest proto.InternalMessageInfo

func (m *GetBlockByNumberRequest) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *GetBlockByNumberRequest) GetComplete() bool {
	if m != nil {
		return m.Complete
	}
	return false
}

// The request message containing range start and end
type GetBlockHeaderByRangeRequest struct {
	Start                int64    `protobuf:"varint,1,opt,name=start,proto3" json:"start,omitempty"`
	End                  int64    `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBlockHeaderByRangeRequest) Reset()         { *m = GetBlockHeaderByRangeRequest{} }
func (m *GetBlockHeaderByRangeRequest) String() string { return proto.CompactTextString(m) }
func (*GetBlockHeaderByRangeRequest) ProtoMessage()    {}
func (*GetBlockHeaderByRangeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{19}
}

func (m *GetBlockHeaderByRangeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBlockHeaderByRangeRequest.Unmarshal(m, b)
}
func (m *GetBlockHeaderByRangeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBlockHeaderByRangeRequest.Marshal(b, m, deterministic)
}
func (m *GetBlockHeaderByRangeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBlockHeaderByRangeRequest.Merge(m, src)
}
func (m *GetBlockHeaderByRangeRequest) XXX_Size() int {
	return xxx_messageInfo_GetBlockHeaderByRangeRequest.Size(m)
}
func (m *GetBlockHeaderByRangeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBlockHeaderByRangeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBlockHeaderByRangeRequest proto.InternalMessageInfo

func (m *GetBlockHeaderByRangeRequest) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *GetBlockHeaderByRangeRequest) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

// The message defines the account's frozen balance.
type FrozenBalance struct {
	// balance amount
	Amount float64 `protobuf:"fixed64,1,opt,name=amount,proto3" json:"amount,omitempty"`
	// free time
	Time                 int64    `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FrozenBalance) Reset()         { *m = FrozenBalance{} }
func (m *FrozenBalance) String() string { return proto.CompactTextString(m) }
func (*FrozenBalance) ProtoMessage()    {}
func (*FrozenBalance) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{20}
}

func (m *FrozenBalance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FrozenBalance.Unmarshal(m, b)
}
func (m *FrozenBalance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FrozenBalance.Marshal(b, m, deterministic)
}
func (m *FrozenBalance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FrozenBalance.Merge(m, src)
}
func (m *FrozenBalance) XXX_Size() int {
	return xxx_messageInfo_FrozenBalance.Size(m)
}
func (m *FrozenBalance) XXX_DiscardUnknown() {
	xxx_messageInfo_FrozenBalance.DiscardUnknown(m)
}

var xxx_messageInfo_FrozenBalance proto.InternalMessageInfo

func (m *FrozenBalance) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *FrozenBalance) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

// The message defines the account's vote info.
type VoteInfo struct {
	// option name
	Option string `protobuf:"bytes,1,opt,name=option,proto3" json:"option,omitempty"`
	// votes
	Votes float64 `protobuf:"fixed64,2,opt,name=votes,proto3" json:"votes,omitempty"`
	// cleared votes
	ClearedVotes         float64  `protobuf:"fixed64,3,opt,name=cleared_votes,json=clearedVotes,proto3" json:"cleared_votes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VoteInfo) Reset()         { *m = VoteInfo{} }
func (m *VoteInfo) String() string { return proto.CompactTextString(m) }
func (*VoteInfo) ProtoMessage()    {}
func (*VoteInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{21}
}

func (m *VoteInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VoteInfo.Unmarshal(m, b)
}
func (m *VoteInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VoteInfo.Marshal(b, m, deterministic)
}
func (m *VoteInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoteInfo.Merge(m, src)
}
func (m *VoteInfo) XXX_Size() int {
	return xxx_messageInfo_VoteInfo.Size(m)
}
func (m *VoteInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_VoteInfo.DiscardUnknown(m)
}

var xxx_messageInfo_VoteInfo proto.InternalMessageInfo

func (m *VoteInfo) GetOption() string {
	if m != nil {
		return m.Option
	}
	return ""
}

func (m *VoteInfo) GetVotes() float64 {
	if m != nil {
		return m.Votes
	}
	return 0
}

func (m *VoteInfo) GetClearedVotes() float64 {
	if m != nil {
		return m.ClearedVotes
	}
	return 0
}

type GetProducerVoteInfoRequest struct {
	// account name
	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	// get data by longest chain's head block or last irreversible block
	ByLongestChain       bool     `protobuf:"varint,2,opt,name=by_longest_chain,json=byLongestChain,proto3" json:"by_longest_chain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProducerVoteInfoRequest) Reset()         { *m = GetProducerVoteInfoRequest{} }
func (m *GetProducerVoteInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetProducerVoteInfoRequest) ProtoMessage()    {}
func (*GetProducerVoteInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{22}
}

func (m *GetProducerVoteInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProducerVoteInfoRequest.Unmarshal(m, b)
}
func (m *GetProducerVoteInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProducerVoteInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetProducerVoteInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProducerVoteInfoRequest.Merge(m, src)
}
func (m *GetProducerVoteInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetProducerVoteInfoRequest.Size(m)
}
func (m *GetProducerVoteInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProducerVoteInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProducerVoteInfoRequest proto.InternalMessageInfo

func (m *GetProducerVoteInfoRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *GetProducerVoteInfoRequest) GetByLongestChain() bool {
	if m != nil {
		return m.ByLongestChain
	}
	return false
}

type GetProducerVoteInfoResponse struct {
	// producer's public key
	Pubkey string `protobuf:"bytes,1,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	// producer's location
	Loc string `protobuf:"bytes,2,opt,name=loc,proto3" json:"loc,omitempty"`
	// producer's url
	Url string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	// producer's net id
	NetId string `protobuf:"bytes,4,opt,name=net_id,json=netId,proto3" json:"net_id,omitempty"`
	// is producer
	IsProducer bool `protobuf:"varint,5,opt,name=is_producer,json=isProducer,proto3" json:"is_producer,omitempty"`
	// is approved
	Status string `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	// is online
	Online bool `protobuf:"varint,7,opt,name=online,proto3" json:"online,omitempty"`
	// votes
	Votes                float64  `protobuf:"fixed64,8,opt,name=votes,proto3" json:"votes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProducerVoteInfoResponse) Reset()         { *m = GetProducerVoteInfoResponse{} }
func (m *GetProducerVoteInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetProducerVoteInfoResponse) ProtoMessage()    {}
func (*GetProducerVoteInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{23}
}

func (m *GetProducerVoteInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProducerVoteInfoResponse.Unmarshal(m, b)
}
func (m *GetProducerVoteInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProducerVoteInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetProducerVoteInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProducerVoteInfoResponse.Merge(m, src)
}
func (m *GetProducerVoteInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetProducerVoteInfoResponse.Size(m)
}
func (m *GetProducerVoteInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProducerVoteInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetProducerVoteInfoResponse proto.InternalMessageInfo

func (m *GetProducerVoteInfoResponse) GetPubkey() string {
	if m != nil {
		return m.Pubkey
	}
	return ""
}

func (m *GetProducerVoteInfoResponse) GetLoc() string {
	if m != nil {
		return m.Loc
	}
	return ""
}

func (m *GetProducerVoteInfoResponse) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *GetProducerVoteInfoResponse) GetNetId() string {
	if m != nil {
		return m.NetId
	}
	return ""
}

func (m *GetProducerVoteInfoResponse) GetIsProducer() bool {
	if m != nil {
		return m.IsProducer
	}
	return false
}

func (m *GetProducerVoteInfoResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *GetProducerVoteInfoResponse) GetOnline() bool {
	if m != nil {
		return m.Online
	}
	return false
}

func (m *GetProducerVoteInfoResponse) GetVotes() float64 {
	if m != nil {
		return m.Votes
	}
	return 0
}

type GasRatioResponse struct {
	// lowest gas ratio in head block
	LowestGasRatio float64 `protobuf:"fixed64,1,opt,name=lowest_gas_ratio,json=lowestGasRatio,proto3" json:"lowest_gas_ratio,omitempty"`
	// median gas ratio in head block
	MedianGasRatio       float64  `protobuf:"fixed64,2,opt,name=median_gas_ratio,json=medianGasRatio,proto3" json:"median_gas_ratio,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GasRatioResponse) Reset()         { *m = GasRatioResponse{} }
func (m *GasRatioResponse) String() string { return proto.CompactTextString(m) }
func (*GasRatioResponse) ProtoMessage()    {}
func (*GasRatioResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{24}
}

func (m *GasRatioResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GasRatioResponse.Unmarshal(m, b)
}
func (m *GasRatioResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GasRatioResponse.Marshal(b, m, deterministic)
}
func (m *GasRatioResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GasRatioResponse.Merge(m, src)
}
func (m *GasRatioResponse) XXX_Size() int {
	return xxx_messageInfo_GasRatioResponse.Size(m)
}
func (m *GasRatioResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GasRatioResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GasRatioResponse proto.InternalMessageInfo

func (m *GasRatioResponse) GetLowestGasRatio() float64 {
	if m != nil {
		return m.LowestGasRatio
	}
	return 0
}

func (m *GasRatioResponse) GetMedianGasRatio() float64 {
	if m != nil {
		return m.MedianGasRatio
	}
	return 0
}

// The message defines account struct.
type Account struct {
	// account name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// account balance
	Balance float64 `protobuf:"fixed64,2,opt,name=balance,proto3" json:"balance,omitempty"`
	// gas information
	GasInfo *Account_GasInfo `protobuf:"bytes,3,opt,name=gas_info,json=gasInfo,proto3" json:"gas_info,omitempty"`
	// ram information
	RamInfo *Account_RAMInfo `protobuf:"bytes,4,opt,name=ram_info,json=ramInfo,proto3" json:"ram_info,omitempty"`
	// account permission
	Permissions map[string]*Account_Permission `protobuf:"bytes,5,rep,name=permissions,proto3" json:"permissions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// account groups
	Groups map[string]*Account_Group `protobuf:"bytes,6,rep,name=groups,proto3" json:"groups,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// frozen balance information
	FrozenBalances []*FrozenBalance `protobuf:"bytes,7,rep,name=frozen_balances,json=frozenBalances,proto3" json:"frozen_balances,omitempty"`
	// vote information
	VoteInfos            []*VoteInfo `protobuf:"bytes,8,rep,name=vote_infos,json=voteInfos,proto3" json:"vote_infos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Account) Reset()         { *m = Account{} }
func (m *Account) String() string { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()    {}
func (*Account) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{25}
}

func (m *Account) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account.Unmarshal(m, b)
}
func (m *Account) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account.Marshal(b, m, deterministic)
}
func (m *Account) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account.Merge(m, src)
}
func (m *Account) XXX_Size() int {
	return xxx_messageInfo_Account.Size(m)
}
func (m *Account) XXX_DiscardUnknown() {
	xxx_messageInfo_Account.DiscardUnknown(m)
}

var xxx_messageInfo_Account proto.InternalMessageInfo

func (m *Account) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Account) GetBalance() float64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *Account) GetGasInfo() *Account_GasInfo {
	if m != nil {
		return m.GasInfo
	}
	return nil
}

func (m *Account) GetRamInfo() *Account_RAMInfo {
	if m != nil {
		return m.RamInfo
	}
	return nil
}

func (m *Account) GetPermissions() map[string]*Account_Permission {
	if m != nil {
		return m.Permissions
	}
	return nil
}

func (m *Account) GetGroups() map[string]*Account_Group {
	if m != nil {
		return m.Groups
	}
	return nil
}

func (m *Account) GetFrozenBalances() []*FrozenBalance {
	if m != nil {
		return m.FrozenBalances
	}
	return nil
}

func (m *Account) GetVoteInfos() []*VoteInfo {
	if m != nil {
		return m.VoteInfos
	}
	return nil
}

// The message defines account pledged coin information.
type Account_PledgeInfo struct {
	// the account who pledges
	Pledger string `protobuf:"bytes,1,opt,name=pledger,proto3" json:"pledger,omitempty"`
	// pledged amount
	Amount               float64  `protobuf:"fixed64,2,opt,name=amount,proto3" json:"amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Account_PledgeInfo) Reset()         { *m = Account_PledgeInfo{} }
func (m *Account_PledgeInfo) String() string { return proto.CompactTextString(m) }
func (*Account_PledgeInfo) ProtoMessage()    {}
func (*Account_PledgeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{25, 0}
}

func (m *Account_PledgeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account_PledgeInfo.Unmarshal(m, b)
}
func (m *Account_PledgeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account_PledgeInfo.Marshal(b, m, deterministic)
}
func (m *Account_PledgeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account_PledgeInfo.Merge(m, src)
}
func (m *Account_PledgeInfo) XXX_Size() int {
	return xxx_messageInfo_Account_PledgeInfo.Size(m)
}
func (m *Account_PledgeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_Account_PledgeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_Account_PledgeInfo proto.InternalMessageInfo

func (m *Account_PledgeInfo) GetPledger() string {
	if m != nil {
		return m.Pledger
	}
	return ""
}

func (m *Account_PledgeInfo) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

// The message defines account gas information.
type Account_GasInfo struct {
	// current total gas amount
	CurrentTotal    float64 `protobuf:"fixed64,1,opt,name=current_total,json=currentTotal,proto3" json:"current_total,omitempty"`
	TransferableGas float64 `protobuf:"fixed64,2,opt,name=transferable_gas,json=transferableGas,proto3" json:"transferable_gas,omitempty"`
	PledgeGas       float64 `protobuf:"fixed64,3,opt,name=pledge_gas,json=pledgeGas,proto3" json:"pledge_gas,omitempty"`
	// gas increase speed
	IncreaseSpeed float64 `protobuf:"fixed64,4,opt,name=increase_speed,json=increaseSpeed,proto3" json:"increase_speed,omitempty"`
	// gas limit
	Limit float64 `protobuf:"fixed64,5,opt,name=limit,proto3" json:"limit,omitempty"`
	// pledge information
	PledgedInfo          []*Account_PledgeInfo `protobuf:"bytes,6,rep,name=pledged_info,json=pledgedInfo,proto3" json:"pledged_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Account_GasInfo) Reset()         { *m = Account_GasInfo{} }
func (m *Account_GasInfo) String() string { return proto.CompactTextString(m) }
func (*Account_GasInfo) ProtoMessage()    {}
func (*Account_GasInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{25, 1}
}

func (m *Account_GasInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account_GasInfo.Unmarshal(m, b)
}
func (m *Account_GasInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account_GasInfo.Marshal(b, m, deterministic)
}
func (m *Account_GasInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account_GasInfo.Merge(m, src)
}
func (m *Account_GasInfo) XXX_Size() int {
	return xxx_messageInfo_Account_GasInfo.Size(m)
}
func (m *Account_GasInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_Account_GasInfo.DiscardUnknown(m)
}

var xxx_messageInfo_Account_GasInfo proto.InternalMessageInfo

func (m *Account_GasInfo) GetCurrentTotal() float64 {
	if m != nil {
		return m.CurrentTotal
	}
	return 0
}

func (m *Account_GasInfo) GetTransferableGas() float64 {
	if m != nil {
		return m.TransferableGas
	}
	return 0
}

func (m *Account_GasInfo) GetPledgeGas() float64 {
	if m != nil {
		return m.PledgeGas
	}
	return 0
}

func (m *Account_GasInfo) GetIncreaseSpeed() float64 {
	if m != nil {
		return m.IncreaseSpeed
	}
	return 0
}

func (m *Account_GasInfo) GetLimit() float64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *Account_GasInfo) GetPledgedInfo() []*Account_PledgeInfo {
	if m != nil {
		return m.PledgedInfo
	}
	return nil
}

// The message defines account ram information.
type Account_RAMInfo struct {
	// available ram bytes
	Available int64 `protobuf:"varint,1,opt,name=available,proto3" json:"available,omitempty"`
	// used ram bytes
	Used int64 `protobuf:"varint,2,opt,name=used,proto3" json:"used,omitempty"`
	// total ram bytes
	Total                int64    `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Account_RAMInfo) Reset()         { *m = Account_RAMInfo{} }
func (m *Account_RAMInfo) String() string { return proto.CompactTextString(m) }
func (*Account_RAMInfo) ProtoMessage()    {}
func (*Account_RAMInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{25, 2}
}

func (m *Account_RAMInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account_RAMInfo.Unmarshal(m, b)
}
func (m *Account_RAMInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account_RAMInfo.Marshal(b, m, deterministic)
}
func (m *Account_RAMInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account_RAMInfo.Merge(m, src)
}
func (m *Account_RAMInfo) XXX_Size() int {
	return xxx_messageInfo_Account_RAMInfo.Size(m)
}
func (m *Account_RAMInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_Account_RAMInfo.DiscardUnknown(m)
}

var xxx_messageInfo_Account_RAMInfo proto.InternalMessageInfo

func (m *Account_RAMInfo) GetAvailable() int64 {
	if m != nil {
		return m.Available
	}
	return 0
}

func (m *Account_RAMInfo) GetUsed() int64 {
	if m != nil {
		return m.Used
	}
	return 0
}

func (m *Account_RAMInfo) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

// The message defines permission item.
type Account_Item struct {
	// permission name or key pair id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// whether it's a key pair
	IsKeyPair bool `protobuf:"varint,2,opt,name=is_key_pair,json=isKeyPair,proto3" json:"is_key_pair,omitempty"`
	// permission weight
	Weight int64 `protobuf:"varint,3,opt,name=weight,proto3" json:"weight,omitempty"`
	// permission
	Permission           string   `protobuf:"bytes,4,opt,name=permission,proto3" json:"permission,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Account_Item) Reset()         { *m = Account_Item{} }
func (m *Account_Item) String() string { return proto.CompactTextString(m) }
func (*Account_Item) ProtoMessage()    {}
func (*Account_Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{25, 3}
}

func (m *Account_Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account_Item.Unmarshal(m, b)
}
func (m *Account_Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account_Item.Marshal(b, m, deterministic)
}
func (m *Account_Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account_Item.Merge(m, src)
}
func (m *Account_Item) XXX_Size() int {
	return xxx_messageInfo_Account_Item.Size(m)
}
func (m *Account_Item) XXX_DiscardUnknown() {
	xxx_messageInfo_Account_Item.DiscardUnknown(m)
}

var xxx_messageInfo_Account_Item proto.InternalMessageInfo

func (m *Account_Item) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Account_Item) GetIsKeyPair() bool {
	if m != nil {
		return m.IsKeyPair
	}
	return false
}

func (m *Account_Item) GetWeight() int64 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *Account_Item) GetPermission() string {
	if m != nil {
		return m.Permission
	}
	return ""
}

// The message defines a permission group.
type Account_Group struct {
	// group name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// permission items
	Items                []*Account_Item `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Account_Group) Reset()         { *m = Account_Group{} }
func (m *Account_Group) String() string { return proto.CompactTextString(m) }
func (*Account_Group) ProtoMessage()    {}
func (*Account_Group) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{25, 4}
}

func (m *Account_Group) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account_Group.Unmarshal(m, b)
}
func (m *Account_Group) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account_Group.Marshal(b, m, deterministic)
}
func (m *Account_Group) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account_Group.Merge(m, src)
}
func (m *Account_Group) XXX_Size() int {
	return xxx_messageInfo_Account_Group.Size(m)
}
func (m *Account_Group) XXX_DiscardUnknown() {
	xxx_messageInfo_Account_Group.DiscardUnknown(m)
}

var xxx_messageInfo_Account_Group proto.InternalMessageInfo

func (m *Account_Group) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Account_Group) GetItems() []*Account_Item {
	if m != nil {
		return m.Items
	}
	return nil
}

// The message defines the permission struct.
type Account_Permission struct {
	// permission name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// permission groups
	GroupNames []string `protobuf:"bytes,2,rep,name=group_names,json=groupNames,proto3" json:"group_names,omitempty"`
	// permission items
	Items []*Account_Item `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	// permission threshold
	Threshold            int64    `protobuf:"varint,4,opt,name=threshold,proto3" json:"threshold,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Account_Permission) Reset()         { *m = Account_Permission{} }
func (m *Account_Permission) String() string { return proto.CompactTextString(m) }
func (*Account_Permission) ProtoMessage()    {}
func (*Account_Permission) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{25, 5}
}

func (m *Account_Permission) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account_Permission.Unmarshal(m, b)
}
func (m *Account_Permission) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account_Permission.Marshal(b, m, deterministic)
}
func (m *Account_Permission) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account_Permission.Merge(m, src)
}
func (m *Account_Permission) XXX_Size() int {
	return xxx_messageInfo_Account_Permission.Size(m)
}
func (m *Account_Permission) XXX_DiscardUnknown() {
	xxx_messageInfo_Account_Permission.DiscardUnknown(m)
}

var xxx_messageInfo_Account_Permission proto.InternalMessageInfo

func (m *Account_Permission) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Account_Permission) GetGroupNames() []string {
	if m != nil {
		return m.GroupNames
	}
	return nil
}

func (m *Account_Permission) GetItems() []*Account_Item {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *Account_Permission) GetThreshold() int64 {
	if m != nil {
		return m.Threshold
	}
	return 0
}

// The message defines the get account request.
type GetAccountRequest struct {
	// account name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// get account by longest chain's head block or last irreversible block
	ByLongestChain       bool     `protobuf:"varint,2,opt,name=by_longest_chain,json=byLongestChain,proto3" json:"by_longest_chain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAccountRequest) Reset()         { *m = GetAccountRequest{} }
func (m *GetAccountRequest) String() string { return proto.CompactTextString(m) }
func (*GetAccountRequest) ProtoMessage()    {}
func (*GetAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{26}
}

func (m *GetAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAccountRequest.Unmarshal(m, b)
}
func (m *GetAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAccountRequest.Marshal(b, m, deterministic)
}
func (m *GetAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAccountRequest.Merge(m, src)
}
func (m *GetAccountRequest) XXX_Size() int {
	return xxx_messageInfo_GetAccountRequest.Size(m)
}
func (m *GetAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAccountRequest proto.InternalMessageInfo

func (m *GetAccountRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetAccountRequest) GetByLongestChain() bool {
	if m != nil {
		return m.ByLongestChain
	}
	return false
}

// The message defines the contract struct.
type Contract struct {
	// contract id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// contract code
	Code string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	// contract language
	Language string `protobuf:"bytes,3,opt,name=language,proto3" json:"language,omitempty"`
	// contract version
	Version string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	// original contract code
	OrigCode string `protobuf:"bytes,6,opt,name=orig_code,json=origCode,proto3" json:"orig_code,omitempty"`
	// contract abis
	Abis                 []*Contract_ABI `protobuf:"bytes,5,rep,name=abis,proto3" json:"abis,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Contract) Reset()         { *m = Contract{} }
func (m *Contract) String() string { return proto.CompactTextString(m) }
func (*Contract) ProtoMessage()    {}
func (*Contract) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{27}
}

func (m *Contract) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Contract.Unmarshal(m, b)
}
func (m *Contract) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Contract.Marshal(b, m, deterministic)
}
func (m *Contract) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Contract.Merge(m, src)
}
func (m *Contract) XXX_Size() int {
	return xxx_messageInfo_Contract.Size(m)
}
func (m *Contract) XXX_DiscardUnknown() {
	xxx_messageInfo_Contract.DiscardUnknown(m)
}

var xxx_messageInfo_Contract proto.InternalMessageInfo

func (m *Contract) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Contract) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Contract) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

func (m *Contract) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Contract) GetOrigCode() string {
	if m != nil {
		return m.OrigCode
	}
	return ""
}

func (m *Contract) GetAbis() []*Contract_ABI {
	if m != nil {
		return m.Abis
	}
	return nil
}

// The message defines the ABI struct.
type Contract_ABI struct {
	// abi name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// abi arguments
	Args []string `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	// abi amount limt
	AmountLimit          []*AmountLimit `protobuf:"bytes,3,rep,name=amount_limit,json=amountLimit,proto3" json:"amount_limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Contract_ABI) Reset()         { *m = Contract_ABI{} }
func (m *Contract_ABI) String() string { return proto.CompactTextString(m) }
func (*Contract_ABI) ProtoMessage()    {}
func (*Contract_ABI) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{27, 0}
}

func (m *Contract_ABI) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Contract_ABI.Unmarshal(m, b)
}
func (m *Contract_ABI) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Contract_ABI.Marshal(b, m, deterministic)
}
func (m *Contract_ABI) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Contract_ABI.Merge(m, src)
}
func (m *Contract_ABI) XXX_Size() int {
	return xxx_messageInfo_Contract_ABI.Size(m)
}
func (m *Contract_ABI) XXX_DiscardUnknown() {
	xxx_messageInfo_Contract_ABI.DiscardUnknown(m)
}

var xxx_messageInfo_Contract_ABI proto.InternalMessageInfo

func (m *Contract_ABI) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Contract_ABI) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *Contract_ABI) GetAmountLimit() []*AmountLimit {
	if m != nil {
		return m.AmountLimit
	}
	return nil
}

// The message defines the contract vote info
type ContractVote struct {
	// vote information
	VoteInfos            []*VoteInfo `protobuf:"bytes,1,rep,name=vote_infos,json=voteInfos,proto3" json:"vote_infos,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ContractVote) Reset()         { *m = ContractVote{} }
func (m *ContractVote) String() string { return proto.CompactTextString(m) }
func (*ContractVote) ProtoMessage()    {}
func (*ContractVote) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{28}
}

func (m *ContractVote) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContractVote.Unmarshal(m, b)
}
func (m *ContractVote) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContractVote.Marshal(b, m, deterministic)
}
func (m *ContractVote) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContractVote.Merge(m, src)
}
func (m *ContractVote) XXX_Size() int {
	return xxx_messageInfo_ContractVote.Size(m)
}
func (m *ContractVote) XXX_DiscardUnknown() {
	xxx_messageInfo_ContractVote.DiscardUnknown(m)
}

var xxx_messageInfo_ContractVote proto.InternalMessageInfo

func (m *ContractVote) GetVoteInfos() []*VoteInfo {
	if m != nil {
		return m.VoteInfos
	}
	return nil
}

// The message defines get contract request.
type GetContractRequest struct {
	// contract id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// get data by longest chain's head block or last irreversible block
	ByLongestChain       bool     `protobuf:"varint,2,opt,name=by_longest_chain,json=byLongestChain,proto3" json:"by_longest_chain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetContractRequest) Reset()         { *m = GetContractRequest{} }
func (m *GetContractRequest) String() string { return proto.CompactTextString(m) }
func (*GetContractRequest) ProtoMessage()    {}
func (*GetContractRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{29}
}

func (m *GetContractRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetContractRequest.Unmarshal(m, b)
}
func (m *GetContractRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetContractRequest.Marshal(b, m, deterministic)
}
func (m *GetContractRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetContractRequest.Merge(m, src)
}
func (m *GetContractRequest) XXX_Size() int {
	return xxx_messageInfo_GetContractRequest.Size(m)
}
func (m *GetContractRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetContractRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetContractRequest proto.InternalMessageInfo

func (m *GetContractRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetContractRequest) GetByLongestChain() bool {
	if m != nil {
		return m.ByLongestChain
	}
	return false
}

// The message defines get contract storage request.
type GetContractStorageRequest struct {
	// contract id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// the key in the StateDB
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// get the value from StateDB, field is needed if StateDB[key] is a map.(we get StateDB[key][field] in this case)
	Field string `protobuf:"bytes,3,opt,name=field,proto3" json:"field,omitempty"`
	// get data by longest chain's head block or last irreversible block
	ByLongestChain       bool     `protobuf:"varint,4,opt,name=by_longest_chain,json=byLongestChain,proto3" json:"by_longest_chain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetContractStorageRequest) Reset()         { *m = GetContractStorageRequest{} }
func (m *GetContractStorageRequest) String() string { return proto.CompactTextString(m) }
func (*GetContractStorageRequest) ProtoMessage()    {}
func (*GetContractStorageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{30}
}

func (m *GetContractStorageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetContractStorageRequest.Unmarshal(m, b)
}
func (m *GetContractStorageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetContractStorageRequest.Marshal(b, m, deterministic)
}
func (m *GetContractStorageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetContractStorageRequest.Merge(m, src)
}
func (m *GetContractStorageRequest) XXX_Size() int {
	return xxx_messageInfo_GetContractStorageRequest.Size(m)
}
func (m *GetContractStorageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetContractStorageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetContractStorageRequest proto.InternalMessageInfo

func (m *GetContractStorageRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetContractStorageRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *GetContractStorageRequest) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

func (m *GetContractStorageRequest) GetByLongestChain() bool {
	if m != nil {
		return m.ByLongestChain
	}
	return false
}

// The message defines get contract storage response.
type GetContractStorageResponse struct {
	// the json string data
	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	// block hash
	BlockHash string `protobuf:"bytes,2,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	// block number
	BlockNumber          int64    `protobuf:"varint,3,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetContractStorageResponse) Reset()         { *m = GetContractStorageResponse{} }
func (m *GetContractStorageResponse) String() string { return proto.CompactTextString(m) }
func (*GetContractStorageResponse) ProtoMessage()    {}
func (*GetContractStorageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{31}
}

func (m *GetContractStorageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetContractStorageResponse.Unmarshal(m, b)
}
func (m *GetContractStorageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetContractStorageResponse.Marshal(b, m, deterministic)
}
func (m *GetContractStorageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetContractStorageResponse.Merge(m, src)
}
func (m *GetContractStorageResponse) XXX_Size() int {
	return xxx_messageInfo_GetContractStorageResponse.Size(m)
}
func (m *GetContractStorageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetContractStorageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetContractStorageResponse proto.InternalMessageInfo

func (m *GetContractStorageResponse) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *GetContractStorageResponse) GetBlockHash() string {
	if m != nil {
		return m.BlockHash
	}
	return ""
}

func (m *GetContractStorageResponse) GetBlockNumber() int64 {
	if m != nil {
		return m.BlockNumber
	}
	return 0
}

// The message defines get batch contract storage request.
type GetBatchContractStorageRequest struct {
	// contract id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// the batch query
	KeyFields []*GetBatchContractStorageRequest_KeyField `protobuf:"bytes,2,rep,name=key_fields,json=keyFields,proto3" json:"key_fields,omitempty"`
	// get data by longest chain's head block or last irreversible block
	ByLongestChain       bool     `protobuf:"varint,3,opt,name=by_longest_chain,json=byLongestChain,proto3" json:"by_longest_chain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBatchContractStorageRequest) Reset()         { *m = GetBatchContractStorageRequest{} }
func (m *GetBatchContractStorageRequest) String() string { return proto.CompactTextString(m) }
func (*GetBatchContractStorageRequest) ProtoMessage()    {}
func (*GetBatchContractStorageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{32}
}

func (m *GetBatchContractStorageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBatchContractStorageRequest.Unmarshal(m, b)
}
func (m *GetBatchContractStorageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBatchContractStorageRequest.Marshal(b, m, deterministic)
}
func (m *GetBatchContractStorageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBatchContractStorageRequest.Merge(m, src)
}
func (m *GetBatchContractStorageRequest) XXX_Size() int {
	return xxx_messageInfo_GetBatchContractStorageRequest.Size(m)
}
func (m *GetBatchContractStorageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBatchContractStorageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBatchContractStorageRequest proto.InternalMessageInfo

func (m *GetBatchContractStorageRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetBatchContractStorageRequest) GetKeyFields() []*GetBatchContractStorageRequest_KeyField {
	if m != nil {
		return m.KeyFields
	}
	return nil
}

func (m *GetBatchContractStorageRequest) GetByLongestChain() bool {
	if m != nil {
		return m.ByLongestChain
	}
	return false
}

// The message defines GetContractStorage request params.
type GetBatchContractStorageRequest_KeyField struct {
	// the key in StateDB
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// get the value from StateDB, fields is needed if StateDB[key] is a map.(we get StateDB[key][field] in this case)
	Field                string   `protobuf:"bytes,2,opt,name=field,proto3" json:"field,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBatchContractStorageRequest_KeyField) Reset() {
	*m = GetBatchContractStorageRequest_KeyField{}
}
func (m *GetBatchContractStorageRequest_KeyField) String() string { return proto.CompactTextString(m) }
func (*GetBatchContractStorageRequest_KeyField) ProtoMessage()    {}
func (*GetBatchContractStorageRequest_KeyField) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{32, 0}
}

func (m *GetBatchContractStorageRequest_KeyField) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBatchContractStorageRequest_KeyField.Unmarshal(m, b)
}
func (m *GetBatchContractStorageRequest_KeyField) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBatchContractStorageRequest_KeyField.Marshal(b, m, deterministic)
}
func (m *GetBatchContractStorageRequest_KeyField) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBatchContractStorageRequest_KeyField.Merge(m, src)
}
func (m *GetBatchContractStorageRequest_KeyField) XXX_Size() int {
	return xxx_messageInfo_GetBatchContractStorageRequest_KeyField.Size(m)
}
func (m *GetBatchContractStorageRequest_KeyField) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBatchContractStorageRequest_KeyField.DiscardUnknown(m)
}

var xxx_messageInfo_GetBatchContractStorageRequest_KeyField proto.InternalMessageInfo

func (m *GetBatchContractStorageRequest_KeyField) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *GetBatchContractStorageRequest_KeyField) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

// The message defines get batch contract storage response.
type GetBatchContractStorageResponse struct {
	// the repeated json string data
	Datas []string `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	// block hash
	BlockHash string `protobuf:"bytes,2,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	// block number
	BlockNumber          int64    `protobuf:"varint,3,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBatchContractStorageResponse) Reset()         { *m = GetBatchContractStorageResponse{} }
func (m *GetBatchContractStorageResponse) String() string { return proto.CompactTextString(m) }
func (*GetBatchContractStorageResponse) ProtoMessage()    {}
func (*GetBatchContractStorageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{33}
}

func (m *GetBatchContractStorageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBatchContractStorageResponse.Unmarshal(m, b)
}
func (m *GetBatchContractStorageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBatchContractStorageResponse.Marshal(b, m, deterministic)
}
func (m *GetBatchContractStorageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBatchContractStorageResponse.Merge(m, src)
}
func (m *GetBatchContractStorageResponse) XXX_Size() int {
	return xxx_messageInfo_GetBatchContractStorageResponse.Size(m)
}
func (m *GetBatchContractStorageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBatchContractStorageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBatchContractStorageResponse proto.InternalMessageInfo

func (m *GetBatchContractStorageResponse) GetDatas() []string {
	if m != nil {
		return m.Datas
	}
	return nil
}

func (m *GetBatchContractStorageResponse) GetBlockHash() string {
	if m != nil {
		return m.BlockHash
	}
	return ""
}

func (m *GetBatchContractStorageResponse) GetBlockNumber() int64 {
	if m != nil {
		return m.BlockNumber
	}
	return 0
}

// The message defines get contract storage request.
type GetContractStorageFieldsRequest struct {
	// contract id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// get the fields from StateDB
	Key string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	// get data by longest chain's head block or last irreversible block
	ByLongestChain       bool     `protobuf:"varint,3,opt,name=by_longest_chain,json=byLongestChain,proto3" json:"by_longest_chain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetContractStorageFieldsRequest) Reset()         { *m = GetContractStorageFieldsRequest{} }
func (m *GetContractStorageFieldsRequest) String() string { return proto.CompactTextString(m) }
func (*GetContractStorageFieldsRequest) ProtoMessage()    {}
func (*GetContractStorageFieldsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{34}
}

func (m *GetContractStorageFieldsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetContractStorageFieldsRequest.Unmarshal(m, b)
}
func (m *GetContractStorageFieldsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetContractStorageFieldsRequest.Marshal(b, m, deterministic)
}
func (m *GetContractStorageFieldsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetContractStorageFieldsRequest.Merge(m, src)
}
func (m *GetContractStorageFieldsRequest) XXX_Size() int {
	return xxx_messageInfo_GetContractStorageFieldsRequest.Size(m)
}
func (m *GetContractStorageFieldsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetContractStorageFieldsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetContractStorageFieldsRequest proto.InternalMessageInfo

func (m *GetContractStorageFieldsRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *GetContractStorageFieldsRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *GetContractStorageFieldsRequest) GetByLongestChain() bool {
	if m != nil {
		return m.ByLongestChain
	}
	return false
}

// The message defines get contract storage response.
type GetContractStorageFieldsResponse struct {
	// the fields.
	Fields []string `protobuf:"bytes,1,rep,name=fields,proto3" json:"fields,omitempty"`
	// block hash
	BlockHash string `protobuf:"bytes,2,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	// block number
	BlockNumber          int64    `protobuf:"varint,3,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetContractStorageFieldsResponse) Reset()         { *m = GetContractStorageFieldsResponse{} }
func (m *GetContractStorageFieldsResponse) String() string { return proto.CompactTextString(m) }
func (*GetContractStorageFieldsResponse) ProtoMessage()    {}
func (*GetContractStorageFieldsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{35}
}

func (m *GetContractStorageFieldsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetContractStorageFieldsResponse.Unmarshal(m, b)
}
func (m *GetContractStorageFieldsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetContractStorageFieldsResponse.Marshal(b, m, deterministic)
}
func (m *GetContractStorageFieldsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetContractStorageFieldsResponse.Merge(m, src)
}
func (m *GetContractStorageFieldsResponse) XXX_Size() int {
	return xxx_messageInfo_GetContractStorageFieldsResponse.Size(m)
}
func (m *GetContractStorageFieldsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetContractStorageFieldsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetContractStorageFieldsResponse proto.InternalMessageInfo

func (m *GetContractStorageFieldsResponse) GetFields() []string {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *GetContractStorageFieldsResponse) GetBlockHash() string {
	if m != nil {
		return m.BlockHash
	}
	return ""
}

func (m *GetContractStorageFieldsResponse) GetBlockNumber() int64 {
	if m != nil {
		return m.BlockNumber
	}
	return 0
}

type ListContractStorageRequest struct {
	// contract id
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Optional. keys will be in [from, to) and prefixed with `prefix`
	From        string                                 `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To          string                                 `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	Prefix      string                                 `protobuf:"bytes,4,opt,name=prefix,proto3" json:"prefix,omitempty"`
	StorageType ListContractStorageRequest_StorageType `protobuf:"varint,5,opt,name=storageType,proto3,enum=rpcpb.ListContractStorageRequest_StorageType" json:"storageType,omitempty"`
	// max count to return. up to 100
	Limit int64 `protobuf:"varint,6,opt,name=limit,proto3" json:"limit,omitempty"`
	// get data by longest chain's head block or last irreversible block
	ByLongestChain       bool     `protobuf:"varint,7,opt,name=by_longest_chain,json=byLongestChain,proto3" json:"by_longest_chain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListContractStorageRequest) Reset()         { *m = ListContractStorageRequest{} }
func (m *ListContractStorageRequest) String() string { return proto.CompactTextString(m) }
func (*ListContractStorageRequest) ProtoMessage()    {}
func (*ListContractStorageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{36}
}

func (m *ListContractStorageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListContractStorageRequest.Unmarshal(m, b)
}
func (m *ListContractStorageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListContractStorageRequest.Marshal(b, m, deterministic)
}
func (m *ListContractStorageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListContractStorageRequest.Merge(m, src)
}
func (m *ListContractStorageRequest) XXX_Size() int {
	return xxx_messageInfo_ListContractStorageRequest.Size(m)
}
func (m *ListContractStorageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListContractStorageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListContractStorageRequest proto.InternalMessageInfo

func (m *ListContractStorageRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ListContractStorageRequest) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *ListContractStorageRequest) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *ListContractStorageRequest) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

func (m *ListContractStorageRequest) GetStorageType() ListContractStorageRequest_StorageType {
	if m != nil {
		return m.StorageType
	}
	return ListContractStorageRequest_KV
}

func (m *ListContractStorageRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListContractStorageRequest) GetByLongestChain() bool {
	if m != nil {
		return m.ByLongestChain
	}
	return false
}

type ListContractStorageResponse struct {
	Datas []*ListContractStorageResponse_Data `protobuf:"bytes,1,rep,name=datas,proto3" json:"datas,omitempty"`
	// block hash
	BlockHash string `protobuf:"bytes,2,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	// block number
	BlockNumber          int64    `protobuf:"varint,3,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListContractStorageResponse) Reset()         { *m = ListContractStorageResponse{} }
func (m *ListContractStorageResponse) String() string { return proto.CompactTextString(m) }
func (*ListContractStorageResponse) ProtoMessage()    {}
func (*ListContractStorageResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{37}
}

func (m *ListContractStorageResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListContractStorageResponse.Unmarshal(m, b)
}
func (m *ListContractStorageResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListContractStorageResponse.Marshal(b, m, deterministic)
}
func (m *ListContractStorageResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListContractStorageResponse.Merge(m, src)
}
func (m *ListContractStorageResponse) XXX_Size() int {
	return xxx_messageInfo_ListContractStorageResponse.Size(m)
}
func (m *ListContractStorageResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListContractStorageResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListContractStorageResponse proto.InternalMessageInfo

func (m *ListContractStorageResponse) GetDatas() []*ListContractStorageResponse_Data {
	if m != nil {
		return m.Datas
	}
	return nil
}

func (m *ListContractStorageResponse) GetBlockHash() string {
	if m != nil {
		return m.BlockHash
	}
	return ""
}

func (m *ListContractStorageResponse) GetBlockNumber() int64 {
	if m != nil {
		return m.BlockNumber
	}
	return 0
}

type ListContractStorageResponse_Data struct {
	// the key in StateDB
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// the value from StateDB
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListContractStorageResponse_Data) Reset()         { *m = ListContractStorageResponse_Data{} }
func (m *ListContractStorageResponse_Data) String() string { return proto.CompactTextString(m) }
func (*ListContractStorageResponse_Data) ProtoMessage()    {}
func (*ListContractStorageResponse_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{37, 0}
}

func (m *ListContractStorageResponse_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListContractStorageResponse_Data.Unmarshal(m, b)
}
func (m *ListContractStorageResponse_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListContractStorageResponse_Data.Marshal(b, m, deterministic)
}
func (m *ListContractStorageResponse_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListContractStorageResponse_Data.Merge(m, src)
}
func (m *ListContractStorageResponse_Data) XXX_Size() int {
	return xxx_messageInfo_ListContractStorageResponse_Data.Size(m)
}
func (m *ListContractStorageResponse_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_ListContractStorageResponse_Data.DiscardUnknown(m)
}

var xxx_messageInfo_ListContractStorageResponse_Data proto.InternalMessageInfo

func (m *ListContractStorageResponse_Data) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *ListContractStorageResponse_Data) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// The message defines send transaction response.
type SendTransactionResponse struct {
	// the final transaction hash
	Hash string `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	// the tx_receipt of execution in advance
	PreTxReceipt         *TxReceipt `protobuf:"bytes,2,opt,name=pre_tx_receipt,json=preTxReceipt,proto3" json:"pre_tx_receipt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SendTransactionResponse) Reset()         { *m = SendTransactionResponse{} }
func (m *SendTransactionResponse) String() string { return proto.CompactTextString(m) }
func (*SendTransactionResponse) ProtoMessage()    {}
func (*SendTransactionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{38}
}

func (m *SendTransactionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendTransactionResponse.Unmarshal(m, b)
}
func (m *SendTransactionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendTransactionResponse.Marshal(b, m, deterministic)
}
func (m *SendTransactionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendTransactionResponse.Merge(m, src)
}
func (m *SendTransactionResponse) XXX_Size() int {
	return xxx_messageInfo_SendTransactionResponse.Size(m)
}
func (m *SendTransactionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SendTransactionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SendTransactionResponse proto.InternalMessageInfo

func (m *SendTransactionResponse) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *SendTransactionResponse) GetPreTxReceipt() *TxReceipt {
	if m != nil {
		return m.PreTxReceipt
	}
	return nil
}

// The message defines get token balance response.
type GetTokenBalanceResponse struct {
	// token balance
	Balance float64 `protobuf:"fixed64,1,opt,name=balance,proto3" json:"balance,omitempty"`
	// frozen balance information
	FrozenBalances       []*FrozenBalance `protobuf:"bytes,2,rep,name=frozen_balances,json=frozenBalances,proto3" json:"frozen_balances,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetTokenBalanceResponse) Reset()         { *m = GetTokenBalanceResponse{} }
func (m *GetTokenBalanceResponse) String() string { return proto.CompactTextString(m) }
func (*GetTokenBalanceResponse) ProtoMessage()    {}
func (*GetTokenBalanceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{39}
}

func (m *GetTokenBalanceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTokenBalanceResponse.Unmarshal(m, b)
}
func (m *GetTokenBalanceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTokenBalanceResponse.Marshal(b, m, deterministic)
}
func (m *GetTokenBalanceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTokenBalanceResponse.Merge(m, src)
}
func (m *GetTokenBalanceResponse) XXX_Size() int {
	return xxx_messageInfo_GetTokenBalanceResponse.Size(m)
}
func (m *GetTokenBalanceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTokenBalanceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTokenBalanceResponse proto.InternalMessageInfo

func (m *GetTokenBalanceResponse) GetBalance() float64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *GetTokenBalanceResponse) GetFrozenBalances() []*FrozenBalance {
	if m != nil {
		return m.FrozenBalances
	}
	return nil
}

// The message defines get token balance request.
type GetTokenBalanceRequest struct {
	// account name
	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	// the token name
	Token string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	// get data by longest chain's head block or last irreversible block
	ByLongestChain       bool     `protobuf:"varint,3,opt,name=by_longest_chain,json=byLongestChain,proto3" json:"by_longest_chain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTokenBalanceRequest) Reset()         { *m = GetTokenBalanceRequest{} }
func (m *GetTokenBalanceRequest) String() string { return proto.CompactTextString(m) }
func (*GetTokenBalanceRequest) ProtoMessage()    {}
func (*GetTokenBalanceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{40}
}

func (m *GetTokenBalanceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTokenBalanceRequest.Unmarshal(m, b)
}
func (m *GetTokenBalanceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTokenBalanceRequest.Marshal(b, m, deterministic)
}
func (m *GetTokenBalanceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTokenBalanceRequest.Merge(m, src)
}
func (m *GetTokenBalanceRequest) XXX_Size() int {
	return xxx_messageInfo_GetTokenBalanceRequest.Size(m)
}
func (m *GetTokenBalanceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTokenBalanceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTokenBalanceRequest proto.InternalMessageInfo

func (m *GetTokenBalanceRequest) GetAccount() string {
	if m != nil {
		return m.Account
	}
	return ""
}

func (m *GetTokenBalanceRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *GetTokenBalanceRequest) GetByLongestChain() bool {
	if m != nil {
		return m.ByLongestChain
	}
	return false
}

// The message defines get token721 balance response.
type GetToken721BalanceResponse struct {
	// token balance
	Balance int64 `protobuf:"varint,1,opt,name=balance,proto3" json:"balance,omitempty"`
	// balance information
	TokenIDs             []string `protobuf:"bytes,2,rep,name=tokenIDs,proto3" json:"tokenIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetToken721BalanceResponse) Reset()         { *m = GetToken721BalanceResponse{} }
func (m *GetToken721BalanceResponse) String() string { return proto.CompactTextString(m) }
func (*GetToken721BalanceResponse) ProtoMessage()    {}
func (*GetToken721BalanceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{41}
}

func (m *GetToken721BalanceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetToken721BalanceResponse.Unmarshal(m, b)
}
func (m *GetToken721BalanceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetToken721BalanceResponse.Marshal(b, m, deterministic)
}
func (m *GetToken721BalanceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetToken721BalanceResponse.Merge(m, src)
}
func (m *GetToken721BalanceResponse) XXX_Size() int {
	return xxx_messageInfo_GetToken721BalanceResponse.Size(m)
}
func (m *GetToken721BalanceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetToken721BalanceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetToken721BalanceResponse proto.InternalMessageInfo

func (m *GetToken721BalanceResponse) GetBalance() int64 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *GetToken721BalanceResponse) GetTokenIDs() []string {
	if m != nil {
		return m.TokenIDs
	}
	return nil
}

// The message defines get token721 info request.
type GetToken721InfoRequest struct {
	// the token name
	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	// token id
	TokenId string `protobuf:"bytes,2,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	// get data by longest chain's head block or last irreversible block
	ByLongestChain       bool     `protobuf:"varint,3,opt,name=by_longest_chain,json=byLongestChain,proto3" json:"by_longest_chain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetToken721InfoRequest) Reset()         { *m = GetToken721InfoRequest{} }
func (m *GetToken721InfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetToken721InfoRequest) ProtoMessage()    {}
func (*GetToken721InfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{42}
}

func (m *GetToken721InfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetToken721InfoRequest.Unmarshal(m, b)
}
func (m *GetToken721InfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetToken721InfoRequest.Marshal(b, m, deterministic)
}
func (m *GetToken721InfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetToken721InfoRequest.Merge(m, src)
}
func (m *GetToken721InfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetToken721InfoRequest.Size(m)
}
func (m *GetToken721InfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetToken721InfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetToken721InfoRequest proto.InternalMessageInfo

func (m *GetToken721InfoRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *GetToken721InfoRequest) GetTokenId() string {
	if m != nil {
		return m.TokenId
	}
	return ""
}

func (m *GetToken721InfoRequest) GetByLongestChain() bool {
	if m != nil {
		return m.ByLongestChain
	}
	return false
}

// The message defines get token721 metadata response.
type GetToken721MetadataResponse struct {
	// token metadata
	Metadata             string   `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetToken721MetadataResponse) Reset()         { *m = GetToken721MetadataResponse{} }
func (m *GetToken721MetadataResponse) String() string { return proto.CompactTextString(m) }
func (*GetToken721MetadataResponse) ProtoMessage()    {}
func (*GetToken721MetadataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{43}
}

func (m *GetToken721MetadataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetToken721MetadataResponse.Unmarshal(m, b)
}
func (m *GetToken721MetadataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetToken721MetadataResponse.Marshal(b, m, deterministic)
}
func (m *GetToken721MetadataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetToken721MetadataResponse.Merge(m, src)
}
func (m *GetToken721MetadataResponse) XXX_Size() int {
	return xxx_messageInfo_GetToken721MetadataResponse.Size(m)
}
func (m *GetToken721MetadataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetToken721MetadataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetToken721MetadataResponse proto.InternalMessageInfo

func (m *GetToken721MetadataResponse) GetMetadata() string {
	if m != nil {
		return m.Metadata
	}
	return ""
}

// The message defines get token721 owner response.
type GetToken721OwnerResponse struct {
	// token owner
	Owner                string   `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetToken721OwnerResponse) Reset()         { *m = GetToken721OwnerResponse{} }
func (m *GetToken721OwnerResponse) String() string { return proto.CompactTextString(m) }
func (*GetToken721OwnerResponse) ProtoMessage()    {}
func (*GetToken721OwnerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{44}
}

func (m *GetToken721OwnerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetToken721OwnerResponse.Unmarshal(m, b)
}
func (m *GetToken721OwnerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetToken721OwnerResponse.Marshal(b, m, deterministic)
}
func (m *GetToken721OwnerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetToken721OwnerResponse.Merge(m, src)
}
func (m *GetToken721OwnerResponse) XXX_Size() int {
	return xxx_messageInfo_GetToken721OwnerResponse.Size(m)
}
func (m *GetToken721OwnerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetToken721OwnerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetToken721OwnerResponse proto.InternalMessageInfo

func (m *GetToken721OwnerResponse) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

// The message defines event struct.
type Event struct {
	// event topic
	Topic Event_Topic `protobuf:"varint,1,opt,name=topic,proto3,enum=rpcpb.Event_Topic" json:"topic,omitempty"`
	// event data
	Data string `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	// event time
	Time                 int64    `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Event) Reset()         { *m = Event{} }
func (m *Event) String() string { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()    {}
func (*Event) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{45}
}

func (m *Event) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Event.Unmarshal(m, b)
}
func (m *Event) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Event.Marshal(b, m, deterministic)
}
func (m *Event) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Event.Merge(m, src)
}
func (m *Event) XXX_Size() int {
	return xxx_messageInfo_Event.Size(m)
}
func (m *Event) XXX_DiscardUnknown() {
	xxx_messageInfo_Event.DiscardUnknown(m)
}

var xxx_messageInfo_Event proto.InternalMessageInfo

func (m *Event) GetTopic() Event_Topic {
	if m != nil {
		return m.Topic
	}
	return Event_CONTRACT_RECEIPT
}

func (m *Event) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *Event) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

// The message defines subscribe request.
type SubscribeRequest struct {
	Topics               []Event_Topic            `protobuf:"varint,1,rep,packed,name=topics,proto3,enum=rpcpb.Event_Topic" json:"topics,omitempty"`
	Filter               *SubscribeRequest_Filter `protobuf:"bytes,2,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *SubscribeRequest) Reset()         { *m = SubscribeRequest{} }
func (m *SubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeRequest) ProtoMessage()    {}
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{46}
}

func (m *SubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeRequest.Unmarshal(m, b)
}
func (m *SubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeRequest.Merge(m, src)
}
func (m *SubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeRequest.Size(m)
}
func (m *SubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeRequest proto.InternalMessageInfo

func (m *SubscribeRequest) GetTopics() []Event_Topic {
	if m != nil {
		return m.Topics
	}
	return nil
}

func (m *SubscribeRequest) GetFilter() *SubscribeRequest_Filter {
	if m != nil {
		return m.Filter
	}
	return nil
}

type SubscribeRequest_Filter struct {
	// contract id
	ContractId           string   `protobuf:"bytes,1,opt,name=contract_id,json=contractId,proto3" json:"contract_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeRequest_Filter) Reset()         { *m = SubscribeRequest_Filter{} }
func (m *SubscribeRequest_Filter) String() string { return proto.CompactTextString(m) }
func (*SubscribeRequest_Filter) ProtoMessage()    {}
func (*SubscribeRequest_Filter) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{46, 0}
}

func (m *SubscribeRequest_Filter) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeRequest_Filter.Unmarshal(m, b)
}
func (m *SubscribeRequest_Filter) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeRequest_Filter.Marshal(b, m, deterministic)
}
func (m *SubscribeRequest_Filter) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeRequest_Filter.Merge(m, src)
}
func (m *SubscribeRequest_Filter) XXX_Size() int {
	return xxx_messageInfo_SubscribeRequest_Filter.Size(m)
}
func (m *SubscribeRequest_Filter) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeRequest_Filter.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeRequest_Filter proto.InternalMessageInfo

func (m *SubscribeRequest_Filter) GetContractId() string {
	if m != nil {
		return m.ContractId
	}
	return ""
}

// The message defines subscribe response.
type SubscribeResponse struct {
	Event                *Event   `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeResponse) Reset()         { *m = SubscribeResponse{} }
func (m *SubscribeResponse) String() string { return proto.CompactTextString(m) }
func (*SubscribeResponse) ProtoMessage()    {}
func (*SubscribeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{47}
}

func (m *SubscribeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeResponse.Unmarshal(m, b)
}
func (m *SubscribeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeResponse.Marshal(b, m, deterministic)
}
func (m *SubscribeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeResponse.Merge(m, src)
}
func (m *SubscribeResponse) XXX_Size() int {
	return xxx_messageInfo_SubscribeResponse.Size(m)
}
func (m *SubscribeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeResponse proto.InternalMessageInfo

func (m *SubscribeResponse) GetEvent() *Event {
	if m != nil {
		return m.Event
	}
	return nil
}

// The message defines the getVoterBonus response.
type VoterBonus struct {
	// the totol voter bonus
	Bonus float64 `protobuf:"fixed64,1,opt,name=bonus,proto3" json:"bonus,omitempty"`
	// the voter bonus detail
	Detail               map[string]float64 `protobuf:"bytes,2,rep,name=detail,proto3" json:"detail,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *VoterBonus) Reset()         { *m = VoterBonus{} }
func (m *VoterBonus) String() string { return proto.CompactTextString(m) }
func (*VoterBonus) ProtoMessage()    {}
func (*VoterBonus) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{48}
}

func (m *VoterBonus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VoterBonus.Unmarshal(m, b)
}
func (m *VoterBonus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VoterBonus.Marshal(b, m, deterministic)
}
func (m *VoterBonus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VoterBonus.Merge(m, src)
}
func (m *VoterBonus) XXX_Size() int {
	return xxx_messageInfo_VoterBonus.Size(m)
}
func (m *VoterBonus) XXX_DiscardUnknown() {
	xxx_messageInfo_VoterBonus.DiscardUnknown(m)
}

var xxx_messageInfo_VoterBonus proto.InternalMessageInfo

func (m *VoterBonus) GetBonus() float64 {
	if m != nil {
		return m.Bonus
	}
	return 0
}

func (m *VoterBonus) GetDetail() map[string]float64 {
	if m != nil {
		return m.Detail
	}
	return nil
}

// The message defines the getCandidateBonus response.
type CandidateBonus struct {
	// the candidate bonus
	Bonus                float64  `protobuf:"fixed64,1,opt,name=bonus,proto3" json:"bonus,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CandidateBonus) Reset()         { *m = CandidateBonus{} }
func (m *CandidateBonus) String() string { return proto.CompactTextString(m) }
func (*CandidateBonus) ProtoMessage()    {}
func (*CandidateBonus) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{49}
}

func (m *CandidateBonus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CandidateBonus.Unmarshal(m, b)
}
func (m *CandidateBonus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CandidateBonus.Marshal(b, m, deterministic)
}
func (m *CandidateBonus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CandidateBonus.Merge(m, src)
}
func (m *CandidateBonus) XXX_Size() int {
	return xxx_messageInfo_CandidateBonus.Size(m)
}
func (m *CandidateBonus) XXX_DiscardUnknown() {
	xxx_messageInfo_CandidateBonus.DiscardUnknown(m)
}

var xxx_messageInfo_CandidateBonus proto.InternalMessageInfo

func (m *CandidateBonus) GetBonus() float64 {
	if m != nil {
		return m.Bonus
	}
	return 0
}

// The message defines the get tokeninfo request.
type GetTokenInfoRequest struct {
	// token symbol
	Symbol string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// get tokeninfo by longest chain's head block or last irreversible block
	ByLongestChain       bool     `protobuf:"varint,2,opt,name=by_longest_chain,json=byLongestChain,proto3" json:"by_longest_chain,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTokenInfoRequest) Reset()         { *m = GetTokenInfoRequest{} }
func (m *GetTokenInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetTokenInfoRequest) ProtoMessage()    {}
func (*GetTokenInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{50}
}

func (m *GetTokenInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTokenInfoRequest.Unmarshal(m, b)
}
func (m *GetTokenInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTokenInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetTokenInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTokenInfoRequest.Merge(m, src)
}
func (m *GetTokenInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetTokenInfoRequest.Size(m)
}
func (m *GetTokenInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTokenInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTokenInfoRequest proto.InternalMessageInfo

func (m *GetTokenInfoRequest) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *GetTokenInfoRequest) GetByLongestChain() bool {
	if m != nil {
		return m.ByLongestChain
	}
	return false
}

// The message defines the token information.
type TokenInfo struct {
	// token symbol
	Symbol string `protobuf:"bytes,1,opt,name=symbol,proto3" json:"symbol,omitempty"`
	// token full name
	FullName string `protobuf:"bytes,2,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	// token issuer
	Issuer string `protobuf:"bytes,3,opt,name=issuer,proto3" json:"issuer,omitempty"`
	// the amount of total supply, the result is total_supply_float multiplied by deciaml
	TotalSupply int64 `protobuf:"varint,4,opt,name=total_supply,json=totalSupply,proto3" json:"total_supply,omitempty"`
	// the amount of current supply, the result is current_supply_float multiplied by deciaml
	CurrentSupply int64 `protobuf:"varint,5,opt,name=current_supply,json=currentSupply,proto3" json:"current_supply,omitempty"`
	// token decimal
	Decimal int32 `protobuf:"varint,6,opt,name=decimal,proto3" json:"decimal,omitempty"`
	// whether the token can be transfered
	CanTransfer bool `protobuf:"varint,7,opt,name=can_transfer,json=canTransfer,proto3" json:"can_transfer,omitempty"`
	// whether the token can only be transfered by issuer
	OnlyIssuerCanTransfer bool `protobuf:"varint,8,opt,name=only_issuer_can_transfer,json=onlyIssuerCanTransfer,proto3" json:"only_issuer_can_transfer,omitempty"`
	// the amount of total supply
	TotalSupplyFloat float64 `protobuf:"fixed64,9,opt,name=total_supply_float,json=totalSupplyFloat,proto3" json:"total_supply_float,omitempty"`
	// the amount of current supply
	CurrentSupplyFloat   float64  `protobuf:"fixed64,10,opt,name=current_supply_float,json=currentSupplyFloat,proto3" json:"current_supply_float,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenInfo) Reset()         { *m = TokenInfo{} }
func (m *TokenInfo) String() string { return proto.CompactTextString(m) }
func (*TokenInfo) ProtoMessage()    {}
func (*TokenInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_1b773bf3e696f610, []int{51}
}

func (m *TokenInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenInfo.Unmarshal(m, b)
}
func (m *TokenInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenInfo.Marshal(b, m, deterministic)
}
func (m *TokenInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenInfo.Merge(m, src)
}
func (m *TokenInfo) XXX_Size() int {
	return xxx_messageInfo_TokenInfo.Size(m)
}
func (m *TokenInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TokenInfo proto.InternalMessageInfo

func (m *TokenInfo) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *TokenInfo) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

func (m *TokenInfo) GetIssuer() string {
	if m != nil {
		return m.Issuer
	}
	return ""
}

func (m *TokenInfo) GetTotalSupply() int64 {
	if m != nil {
		return m.TotalSupply
	}
	return 0
}

func (m *TokenInfo) GetCurrentSupply() int64 {
	if m != nil {
		return m.CurrentSupply
	}
	return 0
}

func (m *TokenInfo) GetDecimal() int32 {
	if m != nil {
		return m.Decimal
	}
	return 0
}

func (m *TokenInfo) GetCanTransfer() bool {
	if m != nil {
		return m.CanTransfer
	}
	return false
}

func (m *TokenInfo) GetOnlyIssuerCanTransfer() bool {
	if m != nil {
		return m.OnlyIssuerCanTransfer
	}
	return false
}

func (m *TokenInfo) GetTotalSupplyFloat() float64 {
	if m != nil {
		return m.TotalSupplyFloat
	}
	return 0
}

func (m *TokenInfo) GetCurrentSupplyFloat() float64 {
	if m != nil {
		return m.CurrentSupplyFloat
	}
	return 0
}

func init() {
	proto.RegisterEnum("rpcpb.TxReceipt_StatusCode", TxReceipt_StatusCode_name, TxReceipt_StatusCode_value)
	proto.RegisterEnum("rpcpb.TransactionResponse_Status", TransactionResponse_Status_name, TransactionResponse_Status_value)
	proto.RegisterEnum("rpcpb.Signature_Algorithm", Signature_Algorithm_name, Signature_Algorithm_value)
	proto.RegisterEnum("rpcpb.BlockResponse_Status", BlockResponse_Status_name, BlockResponse_Status_value)
	proto.RegisterEnum("rpcpb.RawBlockResponse_Status", RawBlockResponse_Status_name, RawBlockResponse_Status_value)
	proto.RegisterEnum("rpcpb.ListContractStorageRequest_StorageType", ListContractStorageRequest_StorageType_name, ListContractStorageRequest_StorageType_value)
	proto.RegisterEnum("rpcpb.Event_Topic", Event_Topic_name, Event_Topic_value)
	proto.RegisterType((*EmptyRequest)(nil), "rpcpb.EmptyRequest")
	proto.RegisterType((*NetworkInfo)(nil), "rpcpb.NetworkInfo")
	proto.RegisterType((*RAMInfoResponse)(nil), "rpcpb.RAMInfoResponse")
	proto.RegisterType((*NodeInfoResponse)(nil), "rpcpb.NodeInfoResponse")
	proto.RegisterType((*AmountLimit)(nil), "rpcpb.AmountLimit")
	proto.RegisterType((*Action)(nil), "rpcpb.Action")
	proto.RegisterType((*TxReceipt)(nil), "rpcpb.TxReceipt")
	proto.RegisterMapType((map[string]int64)(nil), "rpcpb.TxReceipt.RamUsageEntry")
	proto.RegisterType((*TxReceipt_Receipt)(nil), "rpcpb.TxReceipt.Receipt")
	proto.RegisterType((*Transaction)(nil), "rpcpb.Transaction")
	proto.RegisterType((*TransactionResponse)(nil), "rpcpb.TransactionResponse")
	proto.RegisterType((*Signature)(nil), "rpcpb.Signature")
	proto.RegisterType((*TransactionRequest)(nil), "rpcpb.TransactionRequest")
	proto.RegisterType((*Block)(nil), "rpcpb.Block")
	proto.RegisterType((*Block_Info)(nil), "rpcpb.Block.Info")
	proto.RegisterType((*BlockResponse)(nil), "rpcpb.BlockResponse")
	proto.RegisterType((*RawBlockResponse)(nil), "rpcpb.RawBlockResponse")
	proto.RegisterType((*BlockHeaderByRangeResponse)(nil), "rpcpb.BlockHeaderByRangeResponse")
	proto.RegisterType((*ChainInfoResponse)(nil), "rpcpb.ChainInfoResponse")
	proto.RegisterType((*TxHashRequest)(nil), "rpcpb.TxHashRequest")
	proto.RegisterType((*GetBlockByHashRequest)(nil), "rpcpb.GetBlockByHashRequest")
	proto.RegisterType((*GetBlockByNumberRequest)(nil), "rpcpb.GetBlockByNumberRequest")
	proto.RegisterType((*GetBlockHeaderByRangeRequest)(nil), "rpcpb.GetBlockHeaderByRangeRequest")
	proto.RegisterType((*FrozenBalance)(nil), "rpcpb.FrozenBalance")
	proto.RegisterType((*VoteInfo)(nil), "rpcpb.VoteInfo")
	proto.RegisterType((*GetProducerVoteInfoRequest)(nil), "rpcpb.GetProducerVoteInfoRequest")
	proto.RegisterType((*GetProducerVoteInfoResponse)(nil), "rpcpb.GetProducerVoteInfoResponse")
	proto.RegisterType((*GasRatioResponse)(nil), "rpcpb.GasRatioResponse")
	proto.RegisterType((*Account)(nil), "rpcpb.Account")
	proto.RegisterMapType((map[string]*Account_Group)(nil), "rpcpb.Account.GroupsEntry")
	proto.RegisterMapType((map[string]*Account_Permission)(nil), "rpcpb.Account.PermissionsEntry")
	proto.RegisterType((*Account_PledgeInfo)(nil), "rpcpb.Account.PledgeInfo")
	proto.RegisterType((*Account_GasInfo)(nil), "rpcpb.Account.GasInfo")
	proto.RegisterType((*Account_RAMInfo)(nil), "rpcpb.Account.RAMInfo")
	proto.RegisterType((*Account_Item)(nil), "rpcpb.Account.Item")
	proto.RegisterType((*Account_Group)(nil), "rpcpb.Account.Group")
	proto.RegisterType((*Account_Permission)(nil), "rpcpb.Account.Permission")
	proto.RegisterType((*GetAccountRequest)(nil), "rpcpb.GetAccountRequest")
	proto.RegisterType((*Contract)(nil), "rpcpb.Contract")
	proto.RegisterType((*Contract_ABI)(nil), "rpcpb.Contract.ABI")
	proto.RegisterType((*ContractVote)(nil), "rpcpb.ContractVote")
	proto.RegisterType((*GetContractRequest)(nil), "rpcpb.GetContractRequest")
	proto.RegisterType((*GetContractStorageRequest)(nil), "rpcpb.GetContractStorageRequest")
	proto.RegisterType((*GetContractStorageResponse)(nil), "rpcpb.GetContractStorageResponse")
	proto.RegisterType((*GetBatchContractStorageRequest)(nil), "rpcpb.GetBatchContractStorageRequest")
	proto.RegisterType((*GetBatchContractStorageRequest_KeyField)(nil), "rpcpb.GetBatchContractStorageRequest.KeyField")
	proto.RegisterType((*GetBatchContractStorageResponse)(nil), "rpcpb.GetBatchContractStorageResponse")
	proto.RegisterType((*GetContractStorageFieldsRequest)(nil), "rpcpb.GetContractStorageFieldsRequest")
	proto.RegisterType((*GetContractStorageFieldsResponse)(nil), "rpcpb.GetContractStorageFieldsResponse")
	proto.RegisterType((*ListContractStorageRequest)(nil), "rpcpb.ListContractStorageRequest")
	proto.RegisterType((*ListContractStorageResponse)(nil), "rpcpb.ListContractStorageResponse")
	proto.RegisterType((*ListContractStorageResponse_Data)(nil), "rpcpb.ListContractStorageResponse.Data")
	proto.RegisterType((*SendTransactionResponse)(nil), "rpcpb.SendTransactionResponse")
	proto.RegisterType((*GetTokenBalanceResponse)(nil), "rpcpb.GetTokenBalanceResponse")
	proto.RegisterType((*GetTokenBalanceRequest)(nil), "rpcpb.GetTokenBalanceRequest")
	proto.RegisterType((*GetToken721BalanceResponse)(nil), "rpcpb.GetToken721BalanceResponse")
	proto.RegisterType((*GetToken721InfoRequest)(nil), "rpcpb.GetToken721InfoRequest")
	proto.RegisterType((*GetToken721MetadataResponse)(nil), "rpcpb.GetToken721MetadataResponse")
	proto.RegisterType((*GetToken721OwnerResponse)(nil), "rpcpb.GetToken721OwnerResponse")
	proto.RegisterType((*Event)(nil), "rpcpb.Event")
	proto.RegisterType((*SubscribeRequest)(nil), "rpcpb.SubscribeRequest")
	proto.RegisterType((*SubscribeRequest_Filter)(nil), "rpcpb.SubscribeRequest.Filter")
	proto.RegisterType((*SubscribeResponse)(nil), "rpcpb.SubscribeResponse")
	proto.RegisterType((*VoterBonus)(nil), "rpcpb.VoterBonus")
	proto.RegisterMapType((map[string]float64)(nil), "rpcpb.VoterBonus.DetailEntry")
	proto.RegisterType((*CandidateBonus)(nil), "rpcpb.CandidateBonus")
	proto.RegisterType((*GetTokenInfoRequest)(nil), "rpcpb.GetTokenInfoRequest")
	proto.RegisterType((*TokenInfo)(nil), "rpcpb.TokenInfo")
}

func init() { proto.RegisterFile("rpc/pb/rpc.proto", fileDescriptor_1b773bf3e696f610) }

var fileDescriptor_1b773bf3e696f610 = []byte{
	// 4427 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x3a, 0x5d, 0x6f, 0x1b, 0x49,
	0x72, 0x3b, 0xa4, 0xf8, 0x55, 0xa4, 0x28, 0xba, 0x2d, 0xcb, 0x34, 0xbd, 0xfe, 0x1a, 0xef, 0xae,
	0xbd, 0xce, 0x5a, 0xb4, 0xe5, 0xb5, 0xbd, 0xf6, 0xee, 0x5e, 0x4e, 0x92, 0x69, 0xad, 0x60, 0x5b,
	0xd2, 0x8e, 0x68, 0x3b, 0x17, 0x24, 0x98, 0x1b, 0x92, 0x2d, 0x6a, 0xe0, 0xe1, 0x0c, 0x33, 0x33,
	0xb4, 0xc5, 0x73, 0x0c, 0x1c, 0xee, 0x31, 0x48, 0x90, 0x1c, 0x2e, 0x40, 0x72, 0x40, 0x5e, 0xf2,
	0x7a, 0x3f, 0x20, 0xc9, 0x7f, 0x08, 0x90, 0x87, 0xe4, 0x21, 0xc8, 0x43, 0x92, 0x97, 0xfc, 0x83,
	0xbc, 0xe4, 0x25, 0x40, 0xd0, 0xd5, 0xdd, 0x33, 0x3d, 0xc3, 0xa1, 0xa4, 0x0b, 0xf6, 0x89, 0x53,
	0xd5, 0xd5, 0x55, 0xd5, 0xdd, 0x55, 0xd5, 0x55, 0xd5, 0x84, 0x86, 0x3f, 0xee, 0xb7, 0xc7, 0xbd,
	0xb6, 0x3f, 0xee, 0xaf, 0x8e, 0x7d, 0x2f, 0xf4, 0x48, 0xc1, 0x1f, 0xf7, 0xc7, 0xbd, 0xd6, 0xef,
	0x0f, 0xed, 0xf0, 0x70, 0xd2, 0x5b, 0xed, 0x7b, 0xa3, 0xf6, 0xd0, 0x1f, 0xf7, 0x6f, 0xd3, 0xbe,
	0x17, 0x4c, 0x83, 0x90, 0x0a, 0x70, 0x68, 0x85, 0xf4, 0x9d, 0x35, 0x6d, 0x87, 0x87, 0xb6, 0x3f,
	0x30, 0xc7, 0x96, 0x1f, 0x4e, 0xdb, 0x43, 0xcf, 0x1b, 0x3a, 0xd4, 0x1a, 0xdb, 0x81, 0xf8, 0x6c,
	0x5b, 0x63, 0xbb, 0x6d, 0xb9, 0xae, 0x17, 0x5a, 0xa1, 0xed, 0xb9, 0x01, 0x17, 0xd1, 0x7a, 0xac,
	0xf0, 0xb6, 0xbd, 0x20, 0xbc, 0xed, 0x1d, 0x1c, 0xd8, 0x7d, 0xdb, 0x72, 0xda, 0x43, 0xef, 0x36,
	0x43, 0xb4, 0xfb, 0x9e, 0x4f, 0xdb, 0x3d, 0xc7, 0xeb, 0xbf, 0x61, 0xca, 0xe1, 0x07, 0x9f, 0xab,
	0xd7, 0xa1, 0xd6, 0x19, 0x8d, 0xc3, 0xa9, 0x41, 0xff, 0x68, 0x42, 0x83, 0x50, 0xff, 0x06, 0xaa,
	0x3b, 0x34, 0x7c, 0xe7, 0xf9, 0x6f, 0xb6, 0xdd, 0x03, 0x8f, 0xd4, 0x21, 0x67, 0x0f, 0x9a, 0xda,
	0x55, 0xed, 0x66, 0xc5, 0xc8, 0xd9, 0x03, 0x72, 0x09, 0x60, 0x4c, 0xa9, 0x6f, 0xf6, 0xbd, 0x89,
	0x1b, 0x36, 0x73, 0x57, 0xb5, 0x9b, 0x05, 0xa3, 0xc2, 0x30, 0x9b, 0x0c, 0xa1, 0xff, 0x46, 0x83,
	0x25, 0x63, 0xfd, 0x05, 0x9b, 0x6a, 0xd0, 0x60, 0xec, 0xb9, 0x01, 0x25, 0x17, 0xa0, 0x3c, 0x09,
	0xe8, 0xc0, 0xf4, 0xad, 0x11, 0x32, 0xca, 0x1b, 0x25, 0x06, 0x1b, 0xd6, 0x88, 0x5c, 0x87, 0x45,
	0xeb, 0xad, 0x65, 0x3b, 0x56, 0xcf, 0xa1, 0x38, 0x9e, 0xc3, 0xf1, 0x5a, 0x84, 0x64, 0x44, 0x17,
	0xa1, 0x12, 0x7a, 0xa1, 0xe5, 0x20, 0x41, 0x1e, 0x09, 0xca, 0x88, 0x60, 0x83, 0x97, 0x00, 0x02,
	0xea, 0x38, 0xe6, 0xd8, 0xb7, 0xfb, 0xb4, 0xb9, 0x70, 0x55, 0xbb, 0xa9, 0x19, 0x15, 0x86, 0xd9,
	0x63, 0x08, 0x36, 0xb7, 0x37, 0x99, 0x8a, 0xd1, 0x02, 0x8e, 0x96, 0x7b, 0x93, 0x29, 0x0e, 0xea,
	0xff, 0xac, 0x41, 0x63, 0xc7, 0x1b, 0xd0, 0x84, 0xb6, 0x97, 0x00, 0x7a, 0x13, 0xdb, 0x19, 0x98,
	0xa1, 0x3d, 0xa2, 0x62, 0xe1, 0x15, 0xc4, 0x74, 0xed, 0x11, 0x2e, 0x66, 0x68, 0x87, 0xe6, 0xa1,
	0x15, 0x1c, 0xa2, 0xb2, 0x15, 0xa3, 0x34, 0xb4, 0xc3, 0xef, 0xac, 0xe0, 0x90, 0x10, 0x58, 0x18,
	0x79, 0x03, 0x8a, 0x2a, 0x56, 0x0c, 0xfc, 0x26, 0x5f, 0x40, 0xc9, 0xe5, 0xbb, 0x89, 0xba, 0x55,
	0xd7, 0xc8, 0x2a, 0x9a, 0xc3, 0xaa, 0xb2, 0xc7, 0x86, 0x24, 0x21, 0xd7, 0xa0, 0xd6, 0xf7, 0x06,
	0xd4, 0x7c, 0x4b, 0xfd, 0xc0, 0xf6, 0x5c, 0x54, 0xb8, 0x62, 0x54, 0x19, 0xee, 0x15, 0x47, 0x91,
	0x2b, 0x50, 0x0d, 0xa8, 0xff, 0x96, 0xfa, 0x5c, 0xbf, 0x22, 0x6e, 0x07, 0x70, 0x14, 0x53, 0x50,
	0x7f, 0x04, 0xd5, 0xf5, 0x11, 0x3b, 0x8b, 0xe7, 0xf6, 0xc8, 0x0e, 0xc9, 0x32, 0x14, 0x42, 0xef,
	0x0d, 0x75, 0xc5, 0x4a, 0x38, 0xc0, 0xb0, 0x6f, 0x2d, 0x67, 0x42, 0xc5, 0x12, 0x38, 0xa0, 0xff,
	0x04, 0x8a, 0xeb, 0x7d, 0x66, 0x57, 0xa4, 0x05, 0xe5, 0xbe, 0xe7, 0x86, 0xbe, 0xd5, 0x0f, 0xc5,
	0xc4, 0x08, 0x66, 0x1a, 0x58, 0x48, 0x65, 0xba, 0xd6, 0x48, 0x72, 0x00, 0x8e, 0xda, 0xb1, 0x46,
	0x94, 0xed, 0xc3, 0xc0, 0x0a, 0x2d, 0xb9, 0x0f, 0xec, 0x5b, 0xff, 0xcf, 0x05, 0xa8, 0x74, 0x8f,
	0x0c, 0xda, 0xa7, 0xf6, 0x38, 0x24, 0xe7, 0xa1, 0x14, 0x1e, 0xf1, 0x3d, 0xe4, 0xdc, 0x8b, 0xe1,
	0x11, 0x6e, 0xe1, 0x45, 0xa8, 0x0c, 0xad, 0xc0, 0x9c, 0x04, 0xd6, 0x90, 0x73, 0xd6, 0x8c, 0xf2,
	0xd0, 0x0a, 0x5e, 0x32, 0x98, 0x7c, 0x0d, 0x15, 0xdf, 0x1a, 0x89, 0xc1, 0xfc, 0xd5, 0xfc, 0xcd,
	0xea, 0xda, 0x65, 0xb1, 0x9b, 0x11, 0xeb, 0x55, 0xc3, 0x1a, 0x21, 0x75, 0xc7, 0x0d, 0xfd, 0xa9,
	0x51, 0xf6, 0x05, 0x48, 0xbe, 0x81, 0x6a, 0x10, 0x5a, 0xe1, 0x24, 0x30, 0xd9, 0x6e, 0xe2, 0x61,
	0xd4, 0xd7, 0x2e, 0xce, 0x4c, 0xdf, 0x47, 0x9a, 0x4d, 0x6f, 0x40, 0x0d, 0x08, 0xa2, 0x6f, 0xd2,
	0x84, 0xd2, 0x88, 0x06, 0x28, 0x98, 0x9f, 0x89, 0x04, 0xd9, 0x88, 0x4f, 0xc3, 0x89, 0xef, 0x06,
	0xcd, 0xe2, 0xd5, 0x3c, 0x1b, 0x11, 0x20, 0xf9, 0x12, 0xca, 0x3e, 0xe7, 0x1a, 0x34, 0x4b, 0xa8,
	0x6d, 0x73, 0x56, 0x5b, 0xfe, 0x6b, 0x44, 0x94, 0xad, 0xaf, 0x61, 0x31, 0xb1, 0x04, 0xd2, 0x80,
	0xfc, 0x1b, 0x3a, 0x15, 0xfb, 0xc4, 0x3e, 0x93, 0x87, 0x97, 0x17, 0x87, 0xf7, 0x38, 0xf7, 0x95,
	0xd6, 0xfa, 0x31, 0x94, 0xe4, 0x16, 0x5f, 0x84, 0xca, 0xc1, 0xc4, 0xed, 0xf3, 0x33, 0x12, 0x47,
	0xc8, 0x10, 0x78, 0x42, 0x4d, 0x28, 0xb1, 0xe3, 0xa4, 0xc2, 0x83, 0x2b, 0x86, 0x04, 0xf5, 0xbf,
	0xd7, 0x00, 0xe2, 0x3d, 0x20, 0x55, 0x28, 0xed, 0xbf, 0xdc, 0xdc, 0xec, 0xec, 0xef, 0x37, 0x3e,
	0x22, 0x4b, 0x50, 0xdd, 0x5a, 0xdf, 0x37, 0x8d, 0x97, 0x3b, 0xe6, 0xee, 0xcb, 0x6e, 0x43, 0x23,
	0x2b, 0x40, 0x36, 0xd6, 0x9f, 0xaf, 0xef, 0x6c, 0x76, 0xcc, 0x9d, 0xdd, 0xae, 0xd9, 0xd9, 0xd9,
	0x7d, 0xb9, 0xf5, 0x5d, 0x23, 0x47, 0xce, 0xc2, 0xd2, 0x6b, 0x63, 0x77, 0x67, 0xcb, 0xdc, 0x5b,
	0x37, 0xd6, 0x5f, 0x74, 0xba, 0x1d, 0xa3, 0x91, 0x27, 0x67, 0x60, 0xd1, 0x78, 0xb9, 0xd3, 0xdd,
	0x7e, 0xd1, 0x31, 0x3b, 0x86, 0xb1, 0x6b, 0x34, 0x16, 0x18, 0x77, 0x06, 0x33, 0x66, 0x85, 0x78,
	0x52, 0xf7, 0xf7, 0xcc, 0xa7, 0xbb, 0xc6, 0x8b, 0xf5, 0x6e, 0xa3, 0xc8, 0x24, 0x3c, 0x79, 0xb9,
	0xf7, 0x7c, 0x7b, 0x73, 0xbd, 0xdb, 0x31, 0xf7, 0x3b, 0x5d, 0x73, 0x73, 0xf7, 0x49, 0xa7, 0x51,
	0x62, 0xcc, 0x5e, 0xee, 0x3c, 0xdb, 0xd9, 0x7d, 0xbd, 0x23, 0x98, 0x95, 0xf5, 0xdf, 0xe4, 0xa1,
	0xda, 0xf5, 0x2d, 0x37, 0xe0, 0x96, 0xc8, 0xac, 0x50, 0x31, 0x30, 0xfc, 0x66, 0x38, 0xf4, 0x1a,
	0xbe, 0x71, 0xf8, 0x4d, 0x2e, 0x03, 0xd0, 0xa3, 0xb1, 0xed, 0x63, 0x40, 0x15, 0xe1, 0x45, 0xc1,
	0x48, 0x93, 0x44, 0x48, 0xc4, 0x17, 0x66, 0x92, 0x06, 0x83, 0xe5, 0xa0, 0xc3, 0x5c, 0x4d, 0x86,
	0x97, 0xa1, 0x15, 0x44, 0xae, 0x37, 0xa0, 0x8e, 0x35, 0x15, 0x4e, 0xca, 0x01, 0x16, 0x40, 0xfa,
	0x87, 0x96, 0xed, 0x9a, 0xf6, 0xa0, 0x59, 0xba, 0xaa, 0xdd, 0x5c, 0x34, 0x4a, 0x08, 0x6f, 0x0f,
	0xc8, 0x0d, 0x28, 0x71, 0xe5, 0x83, 0x66, 0x19, 0x0d, 0x66, 0x51, 0x18, 0x0c, 0xf7, 0x4a, 0x43,
	0x8e, 0xb2, 0xf3, 0x0b, 0xec, 0xa1, 0x4b, 0xfd, 0xa0, 0x59, 0xe1, 0x46, 0x27, 0x40, 0xf2, 0x31,
	0x54, 0xc6, 0x93, 0x9e, 0x63, 0x07, 0x87, 0xd4, 0x6f, 0x02, 0x0f, 0x5e, 0x11, 0x82, 0xb9, 0xae,
	0x4f, 0x0f, 0xa8, 0xef, 0xd3, 0x81, 0x19, 0x1e, 0x35, 0xab, 0xdc, 0x75, 0x25, 0xaa, 0x7b, 0x44,
	0xee, 0x43, 0xcd, 0xc2, 0xe0, 0x21, 0x96, 0x54, 0x43, 0x35, 0x64, 0xcc, 0x52, 0xe2, 0x8a, 0x51,
	0xb5, 0x94, 0x20, 0xd3, 0x06, 0x08, 0x8f, 0x4c, 0x61, 0xc3, 0xcd, 0x45, 0x0c, 0x74, 0x8d, 0xb4,
	0xb1, 0x1b, 0x95, 0x50, 0x7e, 0xea, 0xff, 0xa1, 0xc1, 0x59, 0xe5, 0xb0, 0xa2, 0xe0, 0xfb, 0x08,
	0x8a, 0xdc, 0xeb, 0xf0, 0xd8, 0xea, 0x6b, 0xd7, 0x24, 0x93, 0x59, 0x5a, 0xe1, 0xaa, 0x86, 0x98,
	0x40, 0xbe, 0x84, 0x6a, 0x18, 0x53, 0xe1, 0x11, 0xc7, 0x9a, 0xab, 0xf3, 0x55, 0x32, 0x16, 0x71,
	0xf1, 0x32, 0x34, 0xdd, 0xc9, 0xa8, 0x47, 0x7d, 0x71, 0xfe, 0x55, 0xc4, 0xed, 0x20, 0x4a, 0xbf,
	0x07, 0x45, 0x2e, 0x8a, 0xd9, 0xeb, 0x5e, 0x67, 0xe7, 0xc9, 0xf6, 0xce, 0x56, 0xe3, 0x23, 0x02,
	0x50, 0xdc, 0x5b, 0xdf, 0x7c, 0xd6, 0x79, 0xd2, 0xd0, 0x48, 0x03, 0x6a, 0xdb, 0x86, 0xd1, 0x79,
	0xd5, 0x31, 0xf6, 0xb7, 0x37, 0x9e, 0x77, 0x1a, 0x39, 0xfd, 0x1f, 0x34, 0xa8, 0xec, 0xdb, 0x43,
	0xd7, 0x0a, 0x27, 0x3e, 0x25, 0x5f, 0x41, 0xc5, 0x72, 0x86, 0x9e, 0x6f, 0x87, 0x87, 0x23, 0xb1,
	0xb2, 0x96, 0xd0, 0x2c, 0x22, 0x5a, 0x5d, 0x97, 0x14, 0x46, 0x4c, 0xcc, 0xce, 0x33, 0x90, 0x14,
	0xb8, 0xa6, 0x9a, 0x11, 0x23, 0xf0, 0x32, 0x66, 0x87, 0xdb, 0x37, 0x59, 0x88, 0xc8, 0xf3, 0x61,
	0x8e, 0x79, 0x46, 0xa7, 0xfa, 0x97, 0x50, 0x89, 0x98, 0x32, 0xe5, 0x85, 0xcb, 0x34, 0x3e, 0x22,
	0x8b, 0x50, 0xd9, 0xef, 0x6c, 0xee, 0xad, 0xdd, 0x7f, 0xf0, 0xec, 0x6e, 0x43, 0x63, 0x63, 0x9d,
	0x27, 0x6b, 0xf7, 0xef, 0xdf, 0x7d, 0xd4, 0xc8, 0xe9, 0x7f, 0x97, 0x07, 0x92, 0xd8, 0x6f, 0xcc,
	0x0b, 0x22, 0xdf, 0xd1, 0xe6, 0xfa, 0x4e, 0xee, 0x78, 0xdf, 0xc9, 0x1f, 0xe7, 0x3b, 0x0b, 0xf3,
	0x7c, 0xa7, 0x30, 0xcf, 0x77, 0x8a, 0x73, 0x7d, 0xa7, 0x74, 0xac, 0xef, 0xa4, 0x4d, 0xbc, 0x7c,
	0x3a, 0x13, 0x9f, 0xef, 0x72, 0x77, 0x00, 0xa2, 0x13, 0x09, 0x9a, 0x80, 0xec, 0x1a, 0xe9, 0xd3,
	0x35, 0x14, 0x9a, 0xa4, 0x93, 0x56, 0xd3, 0x4e, 0xfa, 0x10, 0xea, 0x11, 0x60, 0x06, 0xf6, 0x30,
	0x10, 0x5e, 0x38, 0xcb, 0x73, 0x31, 0xa2, 0xdb, 0xb7, 0x87, 0x81, 0xfe, 0xf3, 0x05, 0x28, 0x6c,
	0x30, 0xc3, 0xcd, 0x8c, 0x7d, 0x4d, 0x28, 0xc9, 0xb4, 0x82, 0x1f, 0x94, 0x04, 0x59, 0x54, 0x18,
	0x5b, 0x3e, 0x75, 0x45, 0x56, 0xc3, 0xaf, 0x6d, 0xe0, 0x28, 0xbc, 0x95, 0x3f, 0x81, 0x7a, 0x78,
	0x64, 0x8e, 0xa8, 0xff, 0xc6, 0xa1, 0x9c, 0x66, 0x01, 0x69, 0x6a, 0xe1, 0xd1, 0x0b, 0x44, 0x22,
	0xd5, 0x3d, 0x58, 0x89, 0x83, 0x40, 0x82, 0x9a, 0x5f, 0x99, 0x67, 0x23, 0xf7, 0x57, 0x26, 0xad,
	0x40, 0x51, 0x78, 0x1e, 0x0f, 0x92, 0x02, 0x62, 0xda, 0xbe, 0xb3, 0x43, 0x97, 0x06, 0x01, 0x06,
	0xc9, 0x8a, 0x21, 0xc1, 0xc8, 0x0e, 0xcb, 0x8a, 0x1d, 0x26, 0xd2, 0x86, 0x4a, 0x2a, 0x6d, 0xb8,
	0x00, 0xe5, 0xf0, 0x48, 0xe4, 0xab, 0xc0, 0x57, 0x1e, 0x1e, 0x61, 0xb6, 0x4a, 0x3e, 0x85, 0x05,
	0xdb, 0x3d, 0xf0, 0xf0, 0x0c, 0xaa, 0x6b, 0x67, 0xc4, 0x06, 0xe3, 0x1e, 0xae, 0x62, 0x66, 0x86,
	0xc3, 0x8c, 0xbd, 0xe7, 0xdb, 0x43, 0x13, 0x69, 0x17, 0xf9, 0x5d, 0xca, 0x10, 0x98, 0x20, 0x3f,
	0x80, 0x9a, 0x12, 0x50, 0x82, 0x54, 0xc8, 0x54, 0x1d, 0x29, 0x41, 0xd7, 0xda, 0x87, 0x05, 0x9c,
	0x2f, 0xb3, 0x46, 0x0d, 0x53, 0x69, 0x9e, 0x35, 0xae, 0x40, 0x31, 0x3c, 0xf4, 0xa9, 0x35, 0x10,
	0x09, 0xb6, 0x80, 0xd8, 0x49, 0xf5, 0xac, 0xb0, 0x7f, 0x68, 0xda, 0xee, 0x80, 0x1e, 0x61, 0x0e,
	0x54, 0x30, 0x00, 0x51, 0xdb, 0x0c, 0xa3, 0xff, 0x52, 0x83, 0x45, 0x54, 0x3f, 0x8a, 0xa8, 0xf7,
	0x52, 0x11, 0xf5, 0xa2, 0xba, 0xc8, 0x79, 0xb1, 0x54, 0x87, 0x02, 0x46, 0x40, 0x11, 0x45, 0x6b,
	0x89, 0x39, 0x7c, 0x48, 0xbf, 0x91, 0x1d, 0x16, 0xd3, 0xa1, 0x50, 0xd3, 0x7f, 0xad, 0x41, 0xc3,
	0xb0, 0xde, 0x25, 0xd5, 0x7a, 0x90, 0x52, 0x4b, 0x26, 0x72, 0x69, 0xc2, 0xb4, 0x66, 0x9f, 0x24,
	0x35, 0xab, 0xaf, 0x22, 0xf4, 0xff, 0xd6, 0xed, 0x19, 0xb4, 0x70, 0xe2, 0x77, 0xd4, 0x1a, 0x50,
	0x7f, 0x63, 0x6a, 0x58, 0xee, 0x90, 0x46, 0x4a, 0xde, 0x06, 0xe0, 0x97, 0x83, 0x63, 0x07, 0x2c,
	0x0f, 0xce, 0x67, 0x48, 0xac, 0x20, 0xf8, 0xdc, 0x0e, 0x42, 0xfd, 0x1f, 0xf3, 0x70, 0x66, 0x13,
	0xc3, 0x51, 0xaa, 0xfa, 0x71, 0x69, 0xa8, 0xe6, 0x61, 0x2c, 0xdd, 0xc7, 0x34, 0xec, 0x73, 0x68,
	0x60, 0x0d, 0xd6, 0xf7, 0x1c, 0x53, 0xf5, 0xcd, 0x8a, 0xb1, 0x24, 0xf1, 0x32, 0xed, 0x57, 0x23,
	0x5f, 0x3e, 0x19, 0xf9, 0x2e, 0x01, 0x1c, 0x52, 0x6b, 0x60, 0xf2, 0x7d, 0x59, 0x40, 0x0b, 0xaf,
	0x30, 0x0c, 0x8f, 0x05, 0x9f, 0xc1, 0x52, 0x3c, 0xac, 0xfa, 0xe3, 0x62, 0x44, 0x23, 0x53, 0x6f,
	0xc7, 0xee, 0x09, 0x2e, 0xdc, 0x19, 0xcb, 0x8e, 0xdd, 0xe3, 0x4c, 0x3e, 0x81, 0x7a, 0x34, 0xc8,
	0x79, 0x70, 0xaf, 0xac, 0x49, 0x0a, 0x64, 0x71, 0x0d, 0x6a, 0xc2, 0x4b, 0xf9, 0x8e, 0x95, 0x31,
	0x50, 0x56, 0x05, 0x8e, 0xed, 0x11, 0xb9, 0x09, 0x0d, 0xc6, 0x28, 0x41, 0xc6, 0xe3, 0x29, 0x13,
	0xf0, 0x5a, 0xa1, 0xbc, 0x03, 0xcb, 0x63, 0xea, 0x0e, 0x6c, 0x77, 0x98, 0xa4, 0x06, 0xa4, 0x26,
	0x62, 0x4c, 0x9d, 0x91, 0x5c, 0x29, 0x06, 0x89, 0x2a, 0xae, 0x23, 0x5e, 0x29, 0x96, 0x70, 0x89,
	0xc5, 0x20, 0x59, 0x8d, 0x57, 0x9d, 0x72, 0x31, 0x58, 0x47, 0x5d, 0x87, 0xc5, 0x2e, 0x16, 0x25,
	0xca, 0x05, 0x98, 0x0e, 0xaa, 0xfa, 0x16, 0x9c, 0xdb, 0xa2, 0x21, 0x4e, 0xda, 0x98, 0x9e, 0x40,
	0xcc, 0x8b, 0xaa, 0xd1, 0xd8, 0xa1, 0x21, 0xbf, 0xca, 0xcb, 0x46, 0x04, 0xeb, 0x2f, 0xe0, 0x7c,
	0xcc, 0x88, 0x27, 0x1e, 0x92, 0x55, 0x1c, 0x22, 0xb5, 0x44, 0x88, 0x3c, 0x8e, 0xdd, 0x53, 0xf8,
	0x58, 0xb2, 0x4b, 0x99, 0x36, 0xe7, 0xb9, 0x0c, 0x85, 0x20, 0xb4, 0xfc, 0x50, 0xb0, 0xe4, 0x00,
	0x2b, 0x35, 0xa8, 0x3b, 0x10, 0xd7, 0x03, 0xfb, 0xd4, 0xbf, 0x86, 0xc5, 0xa7, 0xbe, 0xf7, 0x33,
	0xea, 0x6e, 0x58, 0x8e, 0xe5, 0xf6, 0x31, 0x32, 0xf1, 0x5b, 0x11, 0x67, 0x6a, 0x86, 0x80, 0xb2,
	0x32, 0x6b, 0xfd, 0x0f, 0xa1, 0xfc, 0xca, 0x0b, 0xb1, 0xba, 0x66, 0xf3, 0xbc, 0x31, 0x66, 0x09,
	0xa2, 0xe0, 0xe3, 0x10, 0xd6, 0x32, 0x5e, 0x48, 0x03, 0x51, 0xec, 0x71, 0x80, 0x5c, 0x87, 0xc5,
	0xbe, 0x43, 0x2d, 0x96, 0xa6, 0xf2, 0x51, 0x9e, 0x3b, 0xd4, 0x04, 0x92, 0x71, 0x0d, 0xf4, 0x9f,
	0x42, 0x6b, 0x8b, 0x86, 0x7b, 0xbe, 0x37, 0x98, 0xf4, 0xa9, 0x2f, 0x25, 0xc9, 0x15, 0x36, 0x59,
	0x3e, 0xd0, 0x8f, 0x34, 0xad, 0x18, 0x12, 0x64, 0x26, 0xd8, 0x9b, 0x9a, 0x8e, 0xe7, 0x0e, 0x69,
	0x10, 0x9a, 0xe8, 0x45, 0x62, 0xff, 0xea, 0xbd, 0xe9, 0x73, 0x8e, 0x46, 0x37, 0xd6, 0xff, 0x55,
	0x83, 0x8b, 0x99, 0x22, 0x84, 0x6b, 0xaf, 0x40, 0x71, 0x3c, 0xe9, 0xc5, 0xd5, 0x99, 0x80, 0xd8,
	0x3e, 0x3a, 0x5e, 0x5f, 0xb8, 0x32, 0xfb, 0x64, 0x98, 0x89, 0xef, 0x88, 0xab, 0x95, 0x7d, 0x92,
	0x73, 0x50, 0x64, 0x61, 0xc1, 0x1e, 0x88, 0xbb, 0xb4, 0xe0, 0xd2, 0x70, 0x1b, 0x23, 0xbc, 0x1d,
	0x98, 0x63, 0x21, 0x11, 0x3d, 0xb5, 0x6c, 0x80, 0x1d, 0x48, 0x1d, 0x98, 0x4c, 0x11, 0x38, 0x8b,
	0x5c, 0xa6, 0x08, 0x8c, 0x6c, 0x83, 0x5d, 0xc7, 0x76, 0x29, 0x7a, 0x66, 0xd9, 0x10, 0x50, 0xbc,
	0xc1, 0x65, 0x65, 0x83, 0xf5, 0x03, 0x68, 0x6c, 0x89, 0x3c, 0x2c, 0x5a, 0x0d, 0x73, 0x4d, 0xef,
	0x1d, 0xdb, 0x93, 0x38, 0x67, 0xe3, 0x87, 0x5c, 0xe7, 0x78, 0x39, 0x83, 0x51, 0x8e, 0xe8, 0xc0,
	0xb6, 0x5c, 0x85, 0x92, 0x9f, 0x5f, 0x9d, 0xe3, 0x25, 0xa5, 0xfe, 0xbf, 0x15, 0x28, 0xad, 0x8b,
	0x7d, 0x27, 0xb0, 0xa0, 0x04, 0x41, 0xfc, 0x66, 0xa7, 0xd4, 0xe3, 0x96, 0x25, 0x18, 0x48, 0x90,
	0xdc, 0x05, 0x76, 0x83, 0xf3, 0x2b, 0x37, 0x8f, 0xb1, 0x7e, 0x25, 0x4a, 0xe8, 0x90, 0xdf, 0xea,
	0x96, 0x15, 0xf0, 0xee, 0xc9, 0x90, 0x7f, 0xb0, 0x29, 0xbe, 0x35, 0xe2, 0x53, 0x16, 0x32, 0xa7,
	0xc8, 0xce, 0x54, 0xc9, 0xb7, 0x46, 0x38, 0x65, 0x1d, 0xaa, 0x63, 0xea, 0x8f, 0xec, 0x20, 0xc0,
	0xbb, 0xbb, 0x80, 0x21, 0xfe, 0x4a, 0x6a, 0xd6, 0x5e, 0x4c, 0xc1, 0xbb, 0x0a, 0xea, 0x1c, 0xb2,
	0x06, 0xc5, 0xa1, 0xef, 0x4d, 0xc6, 0xbc, 0xfe, 0xaf, 0x46, 0x89, 0x7d, 0xa4, 0x26, 0x0e, 0xf2,
	0x89, 0x82, 0x92, 0x7c, 0x0b, 0x4b, 0x07, 0xe8, 0x56, 0xa6, 0x58, 0xae, 0x4c, 0x5a, 0x97, 0xc5,
	0xe4, 0x84, 0xd3, 0x19, 0xf5, 0x03, 0x15, 0x0c, 0xc8, 0x2a, 0x00, 0x3b, 0x46, 0x5c, 0xa9, 0x2c,
	0x15, 0x97, 0xc4, 0xcc, 0xc8, 0x48, 0x2b, 0x6f, 0xc5, 0x57, 0xd0, 0xfa, 0x11, 0xc0, 0x9e, 0x43,
	0x07, 0x43, 0xee, 0x8a, 0x4d, 0x28, 0x8d, 0x11, 0xf2, 0xa5, 0x67, 0x08, 0x50, 0x71, 0xee, 0x9c,
	0xea, 0xdc, 0xad, 0xff, 0xd6, 0xa0, 0x24, 0x76, 0x1b, 0x5d, 0x73, 0xe2, 0x63, 0xb6, 0x88, 0x3d,
	0x38, 0x61, 0x22, 0x35, 0x81, 0xec, 0x32, 0x1c, 0xbb, 0xd8, 0x30, 0xd7, 0x39, 0xa0, 0x3e, 0x76,
	0xf6, 0x86, 0x96, 0x74, 0xf0, 0x25, 0x15, 0xbf, 0x65, 0x05, 0x58, 0xc2, 0xa0, 0x78, 0x24, 0xe2,
	0x7e, 0x5e, 0xe1, 0x18, 0x36, 0xfc, 0x29, 0xd4, 0x6d, 0xb7, 0xef, 0x53, 0x2b, 0xa0, 0x66, 0x30,
	0xa6, 0x74, 0x20, 0x2a, 0x85, 0x45, 0x89, 0xdd, 0x67, 0x48, 0x66, 0xe5, 0x6a, 0x0d, 0xce, 0x01,
	0xf2, 0x0d, 0xd4, 0x38, 0xa7, 0x01, 0x37, 0x0a, 0x7e, 0x40, 0x17, 0xd2, 0xc7, 0x1b, 0x6d, 0x8d,
	0x51, 0x15, 0xe4, 0x0c, 0x68, 0x7d, 0x0f, 0x25, 0x61, 0x2f, 0x2c, 0x61, 0x8f, 0x3a, 0x92, 0x22,
	0x64, 0xc6, 0x08, 0x66, 0xd8, 0x93, 0x80, 0xca, 0xb8, 0x89, 0xdf, 0xbc, 0xed, 0xc6, 0xb6, 0x87,
	0x17, 0x94, 0x1c, 0x68, 0xb9, 0xb0, 0xb0, 0x1d, 0xd2, 0xd1, 0x4c, 0x53, 0xf5, 0x32, 0x7a, 0xfd,
	0x1b, 0x3a, 0x35, 0xc7, 0x96, 0xed, 0x8b, 0x68, 0x54, 0xb1, 0x83, 0x67, 0x74, 0xba, 0x67, 0xd9,
	0x78, 0x30, 0xef, 0xa8, 0x3d, 0x3c, 0x0c, 0x05, 0x3b, 0x01, 0xb1, 0xfa, 0x2b, 0x36, 0x45, 0x11,
	0x48, 0x14, 0x4c, 0xeb, 0x29, 0x14, 0xd0, 0xfc, 0x32, 0x7d, 0xef, 0x73, 0x28, 0xd8, 0x21, 0x1d,
	0xb1, 0x93, 0x61, 0xdb, 0x72, 0x36, 0xb5, 0x2d, 0x4c, 0x51, 0x83, 0x53, 0xb4, 0xfe, 0x44, 0x03,
	0x88, 0xbd, 0x20, 0x93, 0xdb, 0x15, 0xa8, 0xa2, 0x71, 0x63, 0xa2, 0xc3, 0x79, 0x56, 0x0c, 0x40,
	0x14, 0xcb, 0x75, 0x82, 0x58, 0x5c, 0xfe, 0x24, 0x71, 0x6c, 0xbb, 0x59, 0xc2, 0x1b, 0x1c, 0x7a,
	0xce, 0x40, 0x26, 0x34, 0x11, 0xa2, 0xf5, 0x13, 0x68, 0xa4, 0x3d, 0x32, 0xa3, 0x49, 0xd6, 0x56,
	0x9b, 0x64, 0x19, 0x87, 0x1e, 0x71, 0x50, 0xfb, 0x67, 0xbb, 0x50, 0x55, 0xdc, 0x35, 0x83, 0xeb,
	0xad, 0x24, 0xd7, 0xe5, 0x2c, 0x5f, 0x57, 0x18, 0xea, 0xdf, 0xc3, 0x99, 0x2d, 0x1a, 0x8a, 0x61,
	0x25, 0x37, 0x98, 0xd9, 0xbe, 0xd3, 0x5f, 0x4a, 0x7f, 0x91, 0x83, 0xf2, 0xa6, 0xec, 0xc5, 0xa6,
	0x0d, 0x89, 0xc0, 0x02, 0xb6, 0x37, 0xf9, 0xd5, 0x83, 0xdf, 0x2c, 0x4f, 0x70, 0x2c, 0x77, 0x38,
	0xe1, 0x5d, 0x53, 0x2c, 0x5e, 0x24, 0xac, 0x16, 0x85, 0xdc, 0x7a, 0xa2, 0xa2, 0x50, 0xd6, 0x3c,
	0xc8, 0xae, 0x18, 0xd7, 0x3c, 0xd8, 0x16, 0xbc, 0x01, 0x0b, 0x56, 0xcf, 0x96, 0xf1, 0x52, 0x1e,
	0xa5, 0xd4, 0x6a, 0x75, 0x7d, 0x63, 0xdb, 0x40, 0x82, 0xd6, 0x00, 0xf2, 0xeb, 0x1b, 0xdb, 0x99,
	0x2b, 0x26, 0xb0, 0x60, 0xf9, 0x43, 0x69, 0x29, 0xf8, 0x3d, 0x53, 0x9b, 0xe7, 0x4f, 0x55, 0x9b,
	0xeb, 0x3f, 0x82, 0x9a, 0x94, 0xcd, 0xc2, 0x5f, 0x2a, 0x3e, 0x6a, 0x27, 0xc5, 0x47, 0x7d, 0x07,
	0xc8, 0x16, 0x0d, 0x25, 0x0b, 0x79, 0x4c, 0xe9, 0xbd, 0x3d, 0xfd, 0x11, 0x7d, 0x80, 0x0b, 0x0a,
	0xbf, 0xfd, 0xd0, 0xf3, 0xad, 0x38, 0xf5, 0x4a, 0xb3, 0x15, 0x46, 0x96, 0x4b, 0xf4, 0x77, 0x0f,
	0x6c, 0xea, 0x0c, 0xc4, 0x69, 0x71, 0x20, 0x53, 0xfc, 0x42, 0xa6, 0x78, 0x1f, 0x13, 0xa3, 0x19,
	0xf1, 0xe2, 0x9a, 0x97, 0xdd, 0x79, 0x2d, 0xee, 0xce, 0xe3, 0x9b, 0x47, 0x9c, 0xda, 0xe7, 0xc4,
	0x9b, 0x87, 0x9a, 0xd7, 0x9f, 0xd4, 0x24, 0xfb, 0x77, 0x0d, 0x2e, 0xb3, 0x8c, 0x93, 0x95, 0xa2,
	0xa7, 0x5c, 0xf8, 0x0b, 0x00, 0x16, 0xf1, 0x70, 0x75, 0x32, 0x08, 0xad, 0x8a, 0x53, 0x3a, 0x9e,
	0xd5, 0xea, 0x33, 0x3a, 0x7d, 0xca, 0xa6, 0x19, 0x95, 0x37, 0xe2, 0x2b, 0xc8, 0xdc, 0x9f, 0x7c,
	0xd6, 0xfe, 0xb4, 0xd6, 0xa0, 0x2c, 0x19, 0x64, 0x77, 0xd7, 0xf9, 0xee, 0xe7, 0x94, 0xdd, 0xd7,
	0xa7, 0x70, 0x65, 0xae, 0x4e, 0x62, 0x63, 0x97, 0xa1, 0xc0, 0x36, 0x93, 0x1b, 0x5c, 0xc5, 0xe0,
	0xc0, 0x0f, 0xb0, 0xb5, 0x23, 0x14, 0x9d, 0x92, 0xca, 0x17, 0x7d, 0x7a, 0x9b, 0x3a, 0xf5, 0xee,
	0xe8, 0x7f, 0x0c, 0x57, 0xe7, 0x8b, 0x8b, 0x13, 0x5f, 0x71, 0x6c, 0x7c, 0xad, 0x02, 0xfa, 0x01,
	0x16, 0xfb, 0xeb, 0x1c, 0xb4, 0x58, 0x31, 0x77, 0x4a, 0x1b, 0x22, 0xb0, 0x70, 0xe0, 0x7b, 0x23,
	0x19, 0xef, 0xd8, 0x37, 0xa3, 0x09, 0x3d, 0xe1, 0x3b, 0xb9, 0x10, 0x4b, 0x8f, 0xb1, 0x4f, 0x0f,
	0xec, 0x23, 0x11, 0xe2, 0x04, 0x44, 0x76, 0xa1, 0x1a, 0x70, 0xee, 0xdd, 0xe9, 0x98, 0xbf, 0xeb,
	0xd4, 0xd7, 0x6e, 0x0b, 0x03, 0x9c, 0xaf, 0xc3, 0xea, 0x7e, 0x3c, 0xc9, 0x50, 0x39, 0xc4, 0x49,
	0x88, 0xe8, 0xf7, 0xf3, 0x24, 0x24, 0x6b, 0xe7, 0x4b, 0x99, 0x3b, 0x7f, 0x19, 0xaa, 0x0a, 0x6f,
	0x52, 0x84, 0xdc, 0xb3, 0x57, 0x8d, 0x8f, 0x48, 0x09, 0xf2, 0x2f, 0xd6, 0xf7, 0x1a, 0x9a, 0xfe,
	0x4f, 0x1a, 0x5c, 0xcc, 0xd4, 0x4b, 0x9c, 0xca, 0xb7, 0xaa, 0x01, 0x56, 0xd7, 0x6e, 0x1c, 0xb7,
	0x14, 0xd1, 0x5d, 0x79, 0x62, 0x85, 0xd6, 0x0f, 0x66, 0xa9, 0xad, 0x55, 0x58, 0x60, 0x0c, 0x4f,
	0x7a, 0xb2, 0x8a, 0xde, 0x1b, 0x29, 0x9c, 0xdf, 0xa7, 0xee, 0x20, 0xeb, 0x21, 0x20, 0xab, 0x7e,
	0x7e, 0x00, 0xf5, 0xb1, 0x4f, 0x4d, 0xe5, 0xa5, 0x21, 0x37, 0xe7, 0xa5, 0xa1, 0x36, 0xf6, 0x69,
	0x04, 0xe9, 0x3e, 0xd6, 0xd6, 0x5d, 0xef, 0x4d, 0x9c, 0x51, 0x4b, 0x31, 0x4a, 0xfd, 0xa1, 0x25,
	0xeb, 0x8f, 0x8c, 0x14, 0x3d, 0x77, 0xfa, 0x14, 0x5d, 0xf7, 0x61, 0x65, 0x46, 0xe6, 0x49, 0x85,
	0x69, 0xf4, 0x54, 0x9b, 0x53, 0x9f, 0x6a, 0x4f, 0xef, 0xb9, 0x06, 0xc6, 0x7d, 0x94, 0xf9, 0x70,
	0xed, 0xee, 0x09, 0x4b, 0xcd, 0xc7, 0x4b, 0x6d, 0x41, 0x19, 0x45, 0x6d, 0x3f, 0x91, 0xb7, 0x71,
	0x04, 0xeb, 0x41, 0xbc, 0x8e, 0x87, 0x6b, 0x77, 0xd5, 0x02, 0x3b, 0xfb, 0x61, 0xf9, 0x82, 0xe0,
	0xc5, 0x0a, 0x5b, 0xf1, 0xb4, 0xc8, 0x79, 0x0d, 0x7e, 0x8b, 0x85, 0x3c, 0xc2, 0xb2, 0x5b, 0x0a,
	0x7d, 0x41, 0x43, 0x8b, 0x59, 0x68, 0xb4, 0x92, 0x16, 0x94, 0x47, 0x02, 0x27, 0x5f, 0x36, 0x25,
	0xac, 0xdf, 0x81, 0xa6, 0x32, 0x75, 0xf7, 0x9d, 0x4b, 0x7d, 0x35, 0x40, 0x7b, 0x0c, 0x21, 0x35,
	0x46, 0x40, 0xff, 0x53, 0x0d, 0x0a, 0x9d, 0xb7, 0x14, 0x1b, 0x03, 0x85, 0xd0, 0x1b, 0xdb, 0x7d,
	0xd1, 0x92, 0x94, 0x69, 0x07, 0x0e, 0xae, 0x76, 0xd9, 0x88, 0xc1, 0x09, 0xa2, 0x3b, 0x34, 0xa7,
	0xdc, 0xa1, 0xb2, 0x03, 0x92, 0x57, 0x3a, 0x20, 0x77, 0xa1, 0x80, 0xf3, 0xc8, 0x32, 0x34, 0x36,
	0x77, 0x77, 0xba, 0xc6, 0xfa, 0x66, 0xd7, 0x34, 0x3a, 0x9b, 0x9d, 0xed, 0xbd, 0x6e, 0xe3, 0x23,
	0x42, 0xa0, 0x1e, 0x61, 0x3b, 0xaf, 0x3a, 0x3b, 0xdd, 0x86, 0xa6, 0xff, 0xad, 0x06, 0x8d, 0xfd,
	0x49, 0x2f, 0xe8, 0xfb, 0x76, 0x2f, 0xb2, 0x99, 0x5b, 0x50, 0x44, 0xc1, 0xdc, 0xb5, 0xb3, 0x55,
	0x13, 0x14, 0xe4, 0x01, 0x8b, 0xcd, 0x4e, 0x48, 0x7d, 0xe1, 0x1d, 0xb2, 0xb3, 0x9a, 0x66, 0xba,
	0xfa, 0x14, 0xa9, 0x0c, 0x41, 0xdd, 0xfa, 0x1c, 0x8a, 0x1c, 0xc3, 0x52, 0x79, 0xf9, 0xd8, 0x6f,
	0x46, 0xd1, 0x16, 0x24, 0x6a, 0x7b, 0xa0, 0x3f, 0x84, 0x33, 0x0a, 0x37, 0xb1, 0xbb, 0x3a, 0x14,
	0x28, 0x53, 0x07, 0xe9, 0xe3, 0x9e, 0x31, 0xaa, 0x68, 0xf0, 0x21, 0xfd, 0x2f, 0x35, 0x00, 0x96,
	0x80, 0xf9, 0x1b, 0x9e, 0x3b, 0x09, 0xd8, 0x81, 0xf4, 0xd8, 0x87, 0xf0, 0x3d, 0x0e, 0x90, 0xfb,
	0x50, 0x1c, 0xd0, 0xd0, 0xb2, 0x1d, 0xe1, 0x70, 0x97, 0x94, 0xcc, 0x8d, 0x4f, 0x5c, 0x7d, 0x82,
	0xe3, 0xa2, 0xa6, 0xe6, 0xc4, 0xad, 0x47, 0x50, 0x55, 0xd0, 0x27, 0xc5, 0x20, 0x4d, 0xcd, 0xd2,
	0x3f, 0x83, 0xfa, 0xa6, 0xe5, 0x0e, 0xec, 0x81, 0x15, 0xd2, 0x63, 0x34, 0xd3, 0x5f, 0xc3, 0x59,
	0x69, 0x5c, 0xaa, 0x27, 0xac, 0x40, 0x31, 0x98, 0x8e, 0x7a, 0x9e, 0x23, 0xdb, 0x40, 0x1c, 0xfa,
	0x2d, 0x12, 0xc6, 0xff, 0xc9, 0x41, 0x25, 0x62, 0x3b, 0x97, 0x1f, 0x3e, 0xe9, 0x3b, 0x8e, 0xfa,
	0xb7, 0x8b, 0x32, 0x43, 0x60, 0x2f, 0x79, 0x05, 0x8a, 0x76, 0x10, 0x4c, 0x44, 0x60, 0xae, 0x18,
	0x02, 0x62, 0x61, 0x9b, 0xff, 0x79, 0x26, 0x98, 0x8c, 0xc7, 0xce, 0x54, 0x94, 0x53, 0x55, 0xc4,
	0xed, 0x23, 0x8a, 0xd5, 0xd8, 0xb2, 0xa4, 0x17, 0x44, 0xfc, 0xd1, 0x4d, 0x16, 0xfa, 0x82, 0xac,
	0x09, 0xa5, 0x01, 0xed, 0xdb, 0x23, 0xcb, 0xc1, 0x0b, 0xae, 0x60, 0x48, 0x10, 0xff, 0xb6, 0x62,
	0xb9, 0xa6, 0x2c, 0xed, 0xc5, 0xf5, 0x56, 0xed, 0x5b, 0x6e, 0x57, 0xa0, 0xc8, 0x43, 0x68, 0x7a,
	0xae, 0x33, 0x35, 0xb9, 0x56, 0x66, 0x82, 0xbc, 0x8c, 0xe4, 0xe7, 0xd8, 0xf8, 0x36, 0x0e, 0x6f,
	0x2a, 0x13, 0xbf, 0x00, 0xa2, 0xea, 0x6f, 0x1e, 0x38, 0x9e, 0x15, 0x8a, 0x37, 0x9e, 0x86, 0xb2,
	0x8a, 0xa7, 0x0c, 0x4f, 0xee, 0xc0, 0x72, 0x72, 0x29, 0x82, 0x1e, 0x90, 0x9e, 0x24, 0x16, 0x84,
	0x33, 0xd6, 0xfe, 0xed, 0x02, 0xc0, 0xfa, 0xd8, 0xde, 0xa7, 0xfe, 0x5b, 0xbb, 0x4f, 0xc9, 0xf7,
	0x50, 0xdd, 0xa2, 0xa1, 0xfc, 0x53, 0x10, 0x91, 0xa5, 0x8d, 0xfa, 0x0f, 0xa9, 0xd6, 0x79, 0xf9,
	0x17, 0x9e, 0xd4, 0x5f, 0x87, 0xf4, 0xe5, 0x5f, 0xfc, 0xcb, 0x7f, 0xfd, 0x2a, 0x57, 0x27, 0xb5,
	0xf6, 0x50, 0xe1, 0xd1, 0x85, 0x1a, 0x4b, 0xa8, 0xe4, 0xc3, 0x40, 0x36, 0x4f, 0xf9, 0xd7, 0x90,
	0x99, 0xf7, 0x03, 0xfd, 0x1c, 0x32, 0x5d, 0x22, 0x8b, 0x8c, 0x69, 0xcc, 0x65, 0x07, 0x60, 0x8b,
	0x86, 0xb2, 0x41, 0x91, 0xc9, 0x53, 0x76, 0xbf, 0x52, 0xff, 0xc7, 0xd2, 0xcf, 0x22, 0xc7, 0x45,
	0x52, 0x65, 0x1c, 0x25, 0x87, 0x3f, 0xc0, 0x85, 0x77, 0x8f, 0x78, 0x1b, 0x9b, 0x2c, 0x47, 0x77,
	0xaa, 0xd2, 0xd5, 0x6e, 0xb5, 0xe6, 0x3f, 0xc7, 0xeb, 0x17, 0x91, 0xeb, 0x39, 0x72, 0x96, 0x71,
	0x95, 0x7c, 0xda, 0xef, 0xd9, 0xcd, 0xfd, 0x81, 0x0c, 0x60, 0x19, 0xb9, 0x8b, 0x2b, 0x79, 0x63,
	0xca, 0xf9, 0xce, 0x11, 0x33, 0x73, 0xa1, 0xeb, 0x9f, 0x20, 0xf3, 0xcb, 0xe4, 0x63, 0xce, 0x3c,
	0xc5, 0x46, 0x4a, 0xf1, 0xa0, 0x9e, 0xec, 0xc6, 0x93, 0x8f, 0x95, 0x7a, 0x62, 0xa6, 0x49, 0xdf,
	0x5a, 0xce, 0x7a, 0x0b, 0xd3, 0x3f, 0x47, 0x59, 0xd7, 0xc9, 0x35, 0x26, 0x4b, 0x99, 0x25, 0xa4,
	0xb4, 0xdf, 0xcb, 0x2e, 0xfb, 0x07, 0xf2, 0x0e, 0x1a, 0xe9, 0xae, 0x3d, 0xb9, 0x3c, 0x23, 0x32,
	0xd1, 0xce, 0x9f, 0x23, 0xf4, 0x36, 0x0a, 0xbd, 0x41, 0x3e, 0x55, 0x84, 0xf2, 0x79, 0xed, 0xf7,
	0x3c, 0xe1, 0x4a, 0x08, 0xfe, 0xb9, 0x86, 0xa1, 0x48, 0xbe, 0x96, 0x9d, 0x5a, 0xf8, 0xf9, 0x39,
	0xcf, 0x6c, 0xfa, 0x1d, 0x94, 0x7f, 0x8b, 0xdc, 0x44, 0x9b, 0x48, 0xb1, 0xcd, 0x54, 0xe1, 0x17,
	0x5a, 0xfc, 0xf6, 0x91, 0x78, 0x63, 0x20, 0xd7, 0x53, 0x4a, 0x64, 0xbd, 0x40, 0xb4, 0xae, 0xa9,
	0xdb, 0x90, 0xf9, 0xfc, 0xa6, 0x5f, 0x43, 0x9d, 0x2e, 0xea, 0x2b, 0xd1, 0x9e, 0x24, 0xe8, 0x1e,
	0x6b, 0xb7, 0x08, 0x45, 0x2f, 0x90, 0x1d, 0xe6, 0x66, 0x2c, 0x38, 0xd9, 0x72, 0x69, 0xd5, 0x93,
	0x8d, 0x9a, 0xe4, 0x76, 0x0b, 0x64, 0xfb, 0x3d, 0x0b, 0xac, 0x1f, 0xda, 0xef, 0xd3, 0x41, 0xfb,
	0x03, 0xf9, 0x73, 0x0d, 0x96, 0x52, 0xe9, 0x1c, 0xb9, 0x14, 0x0b, 0xcb, 0x48, 0xf3, 0x5a, 0x97,
	0xe7, 0x0d, 0x8b, 0xc5, 0x7d, 0x8b, 0x1a, 0x3c, 0x24, 0xf7, 0xd1, 0xa2, 0x15, 0x8a, 0xf6, 0x7b,
	0x91, 0x0f, 0x7e, 0x68, 0xbf, 0xc7, 0xd4, 0x29, 0x53, 0xa3, 0xbf, 0xd6, 0xb0, 0x67, 0x91, 0x4a,
	0xf6, 0x4e, 0x52, 0xea, 0x5a, 0x6a, 0x78, 0x36, 0x4d, 0xd4, 0x7f, 0x8c, 0x7a, 0x3d, 0x26, 0x5f,
	0x45, 0x7a, 0xc5, 0x44, 0xa7, 0x53, 0xed, 0x6f, 0xb4, 0xf8, 0x9a, 0x54, 0xd2, 0xb7, 0x19, 0xdd,
	0x92, 0xf9, 0x64, 0x4b, 0x9f, 0x1d, 0x4e, 0x67, 0x7e, 0xfa, 0x06, 0x2a, 0xf7, 0x0d, 0x79, 0xac,
	0x2a, 0x27, 0xa9, 0x62, 0x9d, 0x64, 0x06, 0x9a, 0xa9, 0xde, 0xaf, 0x34, 0x74, 0xda, 0x44, 0x8a,
	0x78, 0x92, 0x6e, 0x57, 0x66, 0x87, 0x13, 0xa9, 0xa5, 0xfe, 0xbb, 0xa8, 0xd8, 0x23, 0xf2, 0x50,
	0x55, 0x0c, 0x49, 0x4e, 0xa9, 0x15, 0xbf, 0x77, 0xa2, 0x17, 0x96, 0x63, 0xef, 0x9d, 0xf4, 0xcb,
	0x4d, 0xf2, 0xde, 0x89, 0x78, 0xfc, 0x15, 0x3f, 0x87, 0xf4, 0xeb, 0x15, 0x51, 0x8c, 0x60, 0xce,
	0xe3, 0x99, 0x7a, 0x16, 0xf3, 0x1e, 0xbf, 0xf4, 0x47, 0x28, 0xf4, 0x1e, 0xb9, 0xcb, 0x84, 0xa6,
	0xa9, 0x54, 0x4b, 0x99, 0x5d, 0xec, 0x10, 0x17, 0x1b, 0x35, 0x31, 0x2f, 0xc4, 0xd2, 0x52, 0x3d,
	0xb8, 0xd6, 0x52, 0xaa, 0xb5, 0xa8, 0x7f, 0x81, 0x52, 0x3f, 0x23, 0x9f, 0xe0, 0x6d, 0x28, 0xb0,
	0xed, 0xf7, 0x73, 0x76, 0x35, 0x40, 0xb7, 0x4d, 0xf4, 0x06, 0x8f, 0x11, 0x96, 0xee, 0x63, 0x32,
	0xfa, 0x64, 0x60, 0x54, 0x47, 0xe6, 0x0a, 0x9d, 0x26, 0xba, 0x89, 0xa2, 0xe2, 0x26, 0x57, 0x67,
	0xe5, 0x26, 0xfb, 0x0a, 0xaa, 0x73, 0xce, 0x29, 0xd7, 0xf5, 0xcb, 0xa8, 0x4c, 0x53, 0x3f, 0xab,
	0x2a, 0x23, 0x88, 0x58, 0x38, 0xfc, 0x33, 0x8d, 0x3f, 0x23, 0x67, 0xb4, 0xa9, 0xc8, 0xa7, 0xa7,
	0x6a, 0xad, 0xb5, 0x3e, 0x3b, 0x89, 0x4c, 0xa8, 0x72, 0x1d, 0x55, 0xb9, 0xa4, 0x37, 0x31, 0x38,
	0x67, 0x50, 0x32, 0x7d, 0x3e, 0xc0, 0xd9, 0x8c, 0xee, 0x43, 0x64, 0x81, 0xf3, 0x9b, 0x2c, 0x91,
	0x05, 0x1e, 0xd3, 0xbc, 0xd0, 0xaf, 0xa0, 0x0a, 0x17, 0xf4, 0xe5, 0xb6, 0x33, 0x4b, 0xc5, 0xc4,
	0xff, 0x52, 0xc3, 0x6a, 0x30, 0xb3, 0x97, 0x45, 0x3e, 0x9b, 0xbb, 0xdd, 0x89, 0xde, 0x5a, 0xeb,
	0xc6, 0x89, 0x74, 0x42, 0x1d, 0x91, 0xa3, 0xe8, 0x17, 0x32, 0x0e, 0x87, 0x93, 0x32, 0x9d, 0x7e,
	0x0a, 0x4b, 0xa9, 0x9e, 0x47, 0x64, 0x92, 0xb3, 0x7f, 0xba, 0x8b, 0x6e, 0x91, 0x39, 0x6d, 0x12,
	0x9d, 0xa0, 0xcc, 0x9a, 0x5e, 0x6a, 0x07, 0x8c, 0xe2, 0x88, 0x49, 0x30, 0x60, 0xa9, 0x73, 0x44,
	0xfb, 0xa7, 0x94, 0x30, 0x9b, 0x6b, 0xc5, 0x3c, 0x29, 0x63, 0x83, 0x3c, 0x5f, 0x43, 0x25, 0xaa,
	0xf8, 0xc8, 0xf9, 0x39, 0x15, 0x65, 0x94, 0xc4, 0xce, 0x14, 0x87, 0x32, 0x89, 0xd5, 0xa1, 0x1d,
	0xc8, 0xb1, 0xc7, 0xda, 0xad, 0x3b, 0x1a, 0x71, 0x61, 0x71, 0x8b, 0x86, 0x4a, 0x4d, 0x38, 0xff,
	0x0e, 0x3f, 0x33, 0x53, 0x07, 0x26, 0x9d, 0x33, 0xc6, 0x1f, 0x73, 0x93, 0xff, 0x0c, 0x1f, 0x64,
	0x52, 0xd5, 0xde, 0x7c, 0x99, 0xe7, 0x64, 0x48, 0x48, 0x4c, 0xd0, 0xbf, 0x44, 0xb9, 0xab, 0xe4,
	0x0b, 0x3c, 0xea, 0xc4, 0xd8, 0x31, 0xb2, 0x3d, 0x2c, 0x04, 0xe2, 0x3a, 0xaf, 0x95, 0xba, 0x55,
	0xd4, 0x08, 0x1c, 0x1d, 0x8b, 0x1c, 0xd0, 0xef, 0xa2, 0xcc, 0xdf, 0x21, 0x9f, 0x47, 0x57, 0x0c,
	0x0f, 0xb4, 0xbc, 0x38, 0xcc, 0x12, 0xd8, 0x2b, 0xe2, 0xbf, 0x88, 0xee, 0xfd, 0x5f, 0x00, 0x00,
	0x00, 0xff, 0xff, 0xc1, 0x17, 0xc7, 0xc6, 0x94, 0x32, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ApiServiceClient is the client API for ApiService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ApiServiceClient interface {
	// get the node information
	GetNodeInfo(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*NodeInfoResponse, error)
	// get blockchain information
	GetChainInfo(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*ChainInfoResponse, error)
	// get current blockchain ram information
	GetRAMInfo(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*RAMInfoResponse, error)
	// get transaction by hash
	GetTxByHash(ctx context.Context, in *TxHashRequest, opts ...grpc.CallOption) (*TransactionResponse, error)
	// get transaction receipt by transaction hash
	GetTxReceiptByTxHash(ctx context.Context, in *TxHashRequest, opts ...grpc.CallOption) (*TxReceipt, error)
	// get block by hash
	GetBlockByHash(ctx context.Context, in *GetBlockByHashRequest, opts ...grpc.CallOption) (*BlockResponse, error)
	// get block by number
	GetBlockByNumber(ctx context.Context, in *GetBlockByNumberRequest, opts ...grpc.CallOption) (*BlockResponse, error)
	// get raw block by number, including block signature etc
	GetRawBlockByNumber(ctx context.Context, in *GetBlockByNumberRequest, opts ...grpc.CallOption) (*RawBlockResponse, error)
	// get batch of block header
	GetBlockHeaderByRange(ctx context.Context, in *GetBlockHeaderByRangeRequest, opts ...grpc.CallOption) (*BlockHeaderByRangeResponse, error)
	// get account
	GetAccount(ctx context.Context, in *GetAccountRequest, opts ...grpc.CallOption) (*Account, error)
	// get token balance
	GetTokenBalance(ctx context.Context, in *GetTokenBalanceRequest, opts ...grpc.CallOption) (*GetTokenBalanceResponse, error)
	// get token721 balance
	GetToken721Balance(ctx context.Context, in *GetTokenBalanceRequest, opts ...grpc.CallOption) (*GetToken721BalanceResponse, error)
	// get token721 metadata
	GetToken721Metadata(ctx context.Context, in *GetToken721InfoRequest, opts ...grpc.CallOption) (*GetToken721MetadataResponse, error)
	// get token721 owner
	GetToken721Owner(ctx context.Context, in *GetToken721InfoRequest, opts ...grpc.CallOption) (*GetToken721OwnerResponse, error)
	// get gas ratio infomation
	GetGasRatio(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*GasRatioResponse, error)
	// get producer vote infomation
	GetProducerVoteInfo(ctx context.Context, in *GetProducerVoteInfoRequest, opts ...grpc.CallOption) (*GetProducerVoteInfoResponse, error)
	// get contract
	GetContract(ctx context.Context, in *GetContractRequest, opts ...grpc.CallOption) (*Contract, error)
	// get contract vote
	GetContractVote(ctx context.Context, in *GetContractRequest, opts ...grpc.CallOption) (*ContractVote, error)
	// get contract storage
	GetContractStorage(ctx context.Context, in *GetContractStorageRequest, opts ...grpc.CallOption) (*GetContractStorageResponse, error)
	// get batch contract storage
	GetBatchContractStorage(ctx context.Context, in *GetBatchContractStorageRequest, opts ...grpc.CallOption) (*GetBatchContractStorageResponse, error)
	ListContractStorage(ctx context.Context, in *ListContractStorageRequest, opts ...grpc.CallOption) (*ListContractStorageResponse, error)
	// get contract fields storage
	GetContractStorageFields(ctx context.Context, in *GetContractStorageFieldsRequest, opts ...grpc.CallOption) (*GetContractStorageFieldsResponse, error)
	// send transaction
	SendTransaction(ctx context.Context, in *TransactionRequest, opts ...grpc.CallOption) (*SendTransactionResponse, error)
	// execute transaction
	ExecTransaction(ctx context.Context, in *TransactionRequest, opts ...grpc.CallOption) (*TxReceipt, error)
	// subscribe an event
	Subscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (ApiService_SubscribeClient, error)
	GetVoterBonus(ctx context.Context, in *GetAccountRequest, opts ...grpc.CallOption) (*VoterBonus, error)
	GetCandidateBonus(ctx context.Context, in *GetAccountRequest, opts ...grpc.CallOption) (*CandidateBonus, error)
	GetTokenInfo(ctx context.Context, in *GetTokenInfoRequest, opts ...grpc.CallOption) (*TokenInfo, error)
}

type apiServiceClient struct {
	cc *grpc.ClientConn
}

func NewApiServiceClient(cc *grpc.ClientConn) ApiServiceClient {
	return &apiServiceClient{cc}
}

func (c *apiServiceClient) GetNodeInfo(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*NodeInfoResponse, error) {
	out := new(NodeInfoResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetNodeInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetChainInfo(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*ChainInfoResponse, error) {
	out := new(ChainInfoResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetChainInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetRAMInfo(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*RAMInfoResponse, error) {
	out := new(RAMInfoResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetRAMInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetTxByHash(ctx context.Context, in *TxHashRequest, opts ...grpc.CallOption) (*TransactionResponse, error) {
	out := new(TransactionResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetTxByHash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetTxReceiptByTxHash(ctx context.Context, in *TxHashRequest, opts ...grpc.CallOption) (*TxReceipt, error) {
	out := new(TxReceipt)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetTxReceiptByTxHash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetBlockByHash(ctx context.Context, in *GetBlockByHashRequest, opts ...grpc.CallOption) (*BlockResponse, error) {
	out := new(BlockResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetBlockByHash", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetBlockByNumber(ctx context.Context, in *GetBlockByNumberRequest, opts ...grpc.CallOption) (*BlockResponse, error) {
	out := new(BlockResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetBlockByNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetRawBlockByNumber(ctx context.Context, in *GetBlockByNumberRequest, opts ...grpc.CallOption) (*RawBlockResponse, error) {
	out := new(RawBlockResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetRawBlockByNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetBlockHeaderByRange(ctx context.Context, in *GetBlockHeaderByRangeRequest, opts ...grpc.CallOption) (*BlockHeaderByRangeResponse, error) {
	out := new(BlockHeaderByRangeResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetBlockHeaderByRange", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetAccount(ctx context.Context, in *GetAccountRequest, opts ...grpc.CallOption) (*Account, error) {
	out := new(Account)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetTokenBalance(ctx context.Context, in *GetTokenBalanceRequest, opts ...grpc.CallOption) (*GetTokenBalanceResponse, error) {
	out := new(GetTokenBalanceResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetTokenBalance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetToken721Balance(ctx context.Context, in *GetTokenBalanceRequest, opts ...grpc.CallOption) (*GetToken721BalanceResponse, error) {
	out := new(GetToken721BalanceResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetToken721Balance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetToken721Metadata(ctx context.Context, in *GetToken721InfoRequest, opts ...grpc.CallOption) (*GetToken721MetadataResponse, error) {
	out := new(GetToken721MetadataResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetToken721Metadata", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetToken721Owner(ctx context.Context, in *GetToken721InfoRequest, opts ...grpc.CallOption) (*GetToken721OwnerResponse, error) {
	out := new(GetToken721OwnerResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetToken721Owner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetGasRatio(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*GasRatioResponse, error) {
	out := new(GasRatioResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetGasRatio", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetProducerVoteInfo(ctx context.Context, in *GetProducerVoteInfoRequest, opts ...grpc.CallOption) (*GetProducerVoteInfoResponse, error) {
	out := new(GetProducerVoteInfoResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetProducerVoteInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetContract(ctx context.Context, in *GetContractRequest, opts ...grpc.CallOption) (*Contract, error) {
	out := new(Contract)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetContract", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetContractVote(ctx context.Context, in *GetContractRequest, opts ...grpc.CallOption) (*ContractVote, error) {
	out := new(ContractVote)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetContractVote", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetContractStorage(ctx context.Context, in *GetContractStorageRequest, opts ...grpc.CallOption) (*GetContractStorageResponse, error) {
	out := new(GetContractStorageResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetContractStorage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetBatchContractStorage(ctx context.Context, in *GetBatchContractStorageRequest, opts ...grpc.CallOption) (*GetBatchContractStorageResponse, error) {
	out := new(GetBatchContractStorageResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetBatchContractStorage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) ListContractStorage(ctx context.Context, in *ListContractStorageRequest, opts ...grpc.CallOption) (*ListContractStorageResponse, error) {
	out := new(ListContractStorageResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/ListContractStorage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetContractStorageFields(ctx context.Context, in *GetContractStorageFieldsRequest, opts ...grpc.CallOption) (*GetContractStorageFieldsResponse, error) {
	out := new(GetContractStorageFieldsResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetContractStorageFields", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) SendTransaction(ctx context.Context, in *TransactionRequest, opts ...grpc.CallOption) (*SendTransactionResponse, error) {
	out := new(SendTransactionResponse)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/SendTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) ExecTransaction(ctx context.Context, in *TransactionRequest, opts ...grpc.CallOption) (*TxReceipt, error) {
	out := new(TxReceipt)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/ExecTransaction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) Subscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (ApiService_SubscribeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ApiService_serviceDesc.Streams[0], "/rpcpb.ApiService/Subscribe", opts...)
	if err != nil {
		return nil, err
	}
	x := &apiServiceSubscribeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ApiService_SubscribeClient interface {
	Recv() (*SubscribeResponse, error)
	grpc.ClientStream
}

type apiServiceSubscribeClient struct {
	grpc.ClientStream
}

func (x *apiServiceSubscribeClient) Recv() (*SubscribeResponse, error) {
	m := new(SubscribeResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *apiServiceClient) GetVoterBonus(ctx context.Context, in *GetAccountRequest, opts ...grpc.CallOption) (*VoterBonus, error) {
	out := new(VoterBonus)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetVoterBonus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetCandidateBonus(ctx context.Context, in *GetAccountRequest, opts ...grpc.CallOption) (*CandidateBonus, error) {
	out := new(CandidateBonus)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetCandidateBonus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *apiServiceClient) GetTokenInfo(ctx context.Context, in *GetTokenInfoRequest, opts ...grpc.CallOption) (*TokenInfo, error) {
	out := new(TokenInfo)
	err := c.cc.Invoke(ctx, "/rpcpb.ApiService/GetTokenInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ApiServiceServer is the server API for ApiService service.
type ApiServiceServer interface {
	// get the node information
	GetNodeInfo(context.Context, *EmptyRequest) (*NodeInfoResponse, error)
	// get blockchain information
	GetChainInfo(context.Context, *EmptyRequest) (*ChainInfoResponse, error)
	// get current blockchain ram information
	GetRAMInfo(context.Context, *EmptyRequest) (*RAMInfoResponse, error)
	// get transaction by hash
	GetTxByHash(context.Context, *TxHashRequest) (*TransactionResponse, error)
	// get transaction receipt by transaction hash
	GetTxReceiptByTxHash(context.Context, *TxHashRequest) (*TxReceipt, error)
	// get block by hash
	GetBlockByHash(context.Context, *GetBlockByHashRequest) (*BlockResponse, error)
	// get block by number
	GetBlockByNumber(context.Context, *GetBlockByNumberRequest) (*BlockResponse, error)
	// get raw block by number, including block signature etc
	GetRawBlockByNumber(context.Context, *GetBlockByNumberRequest) (*RawBlockResponse, error)
	// get batch of block header
	GetBlockHeaderByRange(context.Context, *GetBlockHeaderByRangeRequest) (*BlockHeaderByRangeResponse, error)
	// get account
	GetAccount(context.Context, *GetAccountRequest) (*Account, error)
	// get token balance
	GetTokenBalance(context.Context, *GetTokenBalanceRequest) (*GetTokenBalanceResponse, error)
	// get token721 balance
	GetToken721Balance(context.Context, *GetTokenBalanceRequest) (*GetToken721BalanceResponse, error)
	// get token721 metadata
	GetToken721Metadata(context.Context, *GetToken721InfoRequest) (*GetToken721MetadataResponse, error)
	// get token721 owner
	GetToken721Owner(context.Context, *GetToken721InfoRequest) (*GetToken721OwnerResponse, error)
	// get gas ratio infomation
	GetGasRatio(context.Context, *EmptyRequest) (*GasRatioResponse, error)
	// get producer vote infomation
	GetProducerVoteInfo(context.Context, *GetProducerVoteInfoRequest) (*GetProducerVoteInfoResponse, error)
	// get contract
	GetContract(context.Context, *GetContractRequest) (*Contract, error)
	// get contract vote
	GetContractVote(context.Context, *GetContractRequest) (*ContractVote, error)
	// get contract storage
	GetContractStorage(context.Context, *GetContractStorageRequest) (*GetContractStorageResponse, error)
	// get batch contract storage
	GetBatchContractStorage(context.Context, *GetBatchContractStorageRequest) (*GetBatchContractStorageResponse, error)
	ListContractStorage(context.Context, *ListContractStorageRequest) (*ListContractStorageResponse, error)
	// get contract fields storage
	GetContractStorageFields(context.Context, *GetContractStorageFieldsRequest) (*GetContractStorageFieldsResponse, error)
	// send transaction
	SendTransaction(context.Context, *TransactionRequest) (*SendTransactionResponse, error)
	// execute transaction
	ExecTransaction(context.Context, *TransactionRequest) (*TxReceipt, error)
	// subscribe an event
	Subscribe(*SubscribeRequest, ApiService_SubscribeServer) error
	GetVoterBonus(context.Context, *GetAccountRequest) (*VoterBonus, error)
	GetCandidateBonus(context.Context, *GetAccountRequest) (*CandidateBonus, error)
	GetTokenInfo(context.Context, *GetTokenInfoRequest) (*TokenInfo, error)
}

// UnimplementedApiServiceServer can be embedded to have forward compatible implementations.
type UnimplementedApiServiceServer struct {
}

func (*UnimplementedApiServiceServer) GetNodeInfo(ctx context.Context, req *EmptyRequest) (*NodeInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNodeInfo not implemented")
}
func (*UnimplementedApiServiceServer) GetChainInfo(ctx context.Context, req *EmptyRequest) (*ChainInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetChainInfo not implemented")
}
func (*UnimplementedApiServiceServer) GetRAMInfo(ctx context.Context, req *EmptyRequest) (*RAMInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRAMInfo not implemented")
}
func (*UnimplementedApiServiceServer) GetTxByHash(ctx context.Context, req *TxHashRequest) (*TransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTxByHash not implemented")
}
func (*UnimplementedApiServiceServer) GetTxReceiptByTxHash(ctx context.Context, req *TxHashRequest) (*TxReceipt, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTxReceiptByTxHash not implemented")
}
func (*UnimplementedApiServiceServer) GetBlockByHash(ctx context.Context, req *GetBlockByHashRequest) (*BlockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlockByHash not implemented")
}
func (*UnimplementedApiServiceServer) GetBlockByNumber(ctx context.Context, req *GetBlockByNumberRequest) (*BlockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlockByNumber not implemented")
}
func (*UnimplementedApiServiceServer) GetRawBlockByNumber(ctx context.Context, req *GetBlockByNumberRequest) (*RawBlockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRawBlockByNumber not implemented")
}
func (*UnimplementedApiServiceServer) GetBlockHeaderByRange(ctx context.Context, req *GetBlockHeaderByRangeRequest) (*BlockHeaderByRangeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBlockHeaderByRange not implemented")
}
func (*UnimplementedApiServiceServer) GetAccount(ctx context.Context, req *GetAccountRequest) (*Account, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAccount not implemented")
}
func (*UnimplementedApiServiceServer) GetTokenBalance(ctx context.Context, req *GetTokenBalanceRequest) (*GetTokenBalanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTokenBalance not implemented")
}
func (*UnimplementedApiServiceServer) GetToken721Balance(ctx context.Context, req *GetTokenBalanceRequest) (*GetToken721BalanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetToken721Balance not implemented")
}
func (*UnimplementedApiServiceServer) GetToken721Metadata(ctx context.Context, req *GetToken721InfoRequest) (*GetToken721MetadataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetToken721Metadata not implemented")
}
func (*UnimplementedApiServiceServer) GetToken721Owner(ctx context.Context, req *GetToken721InfoRequest) (*GetToken721OwnerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetToken721Owner not implemented")
}
func (*UnimplementedApiServiceServer) GetGasRatio(ctx context.Context, req *EmptyRequest) (*GasRatioResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGasRatio not implemented")
}
func (*UnimplementedApiServiceServer) GetProducerVoteInfo(ctx context.Context, req *GetProducerVoteInfoRequest) (*GetProducerVoteInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProducerVoteInfo not implemented")
}
func (*UnimplementedApiServiceServer) GetContract(ctx context.Context, req *GetContractRequest) (*Contract, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetContract not implemented")
}
func (*UnimplementedApiServiceServer) GetContractVote(ctx context.Context, req *GetContractRequest) (*ContractVote, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetContractVote not implemented")
}
func (*UnimplementedApiServiceServer) GetContractStorage(ctx context.Context, req *GetContractStorageRequest) (*GetContractStorageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetContractStorage not implemented")
}
func (*UnimplementedApiServiceServer) GetBatchContractStorage(ctx context.Context, req *GetBatchContractStorageRequest) (*GetBatchContractStorageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBatchContractStorage not implemented")
}
func (*UnimplementedApiServiceServer) ListContractStorage(ctx context.Context, req *ListContractStorageRequest) (*ListContractStorageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListContractStorage not implemented")
}
func (*UnimplementedApiServiceServer) GetContractStorageFields(ctx context.Context, req *GetContractStorageFieldsRequest) (*GetContractStorageFieldsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetContractStorageFields not implemented")
}
func (*UnimplementedApiServiceServer) SendTransaction(ctx context.Context, req *TransactionRequest) (*SendTransactionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendTransaction not implemented")
}
func (*UnimplementedApiServiceServer) ExecTransaction(ctx context.Context, req *TransactionRequest) (*TxReceipt, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecTransaction not implemented")
}
func (*UnimplementedApiServiceServer) Subscribe(req *SubscribeRequest, srv ApiService_SubscribeServer) error {
	return status.Errorf(codes.Unimplemented, "method Subscribe not implemented")
}
func (*UnimplementedApiServiceServer) GetVoterBonus(ctx context.Context, req *GetAccountRequest) (*VoterBonus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVoterBonus not implemented")
}
func (*UnimplementedApiServiceServer) GetCandidateBonus(ctx context.Context, req *GetAccountRequest) (*CandidateBonus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCandidateBonus not implemented")
}
func (*UnimplementedApiServiceServer) GetTokenInfo(ctx context.Context, req *GetTokenInfoRequest) (*TokenInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTokenInfo not implemented")
}

func RegisterApiServiceServer(s *grpc.Server, srv ApiServiceServer) {
	s.RegisterService(&_ApiService_serviceDesc, srv)
}

func _ApiService_GetNodeInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetNodeInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetNodeInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetNodeInfo(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetChainInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetChainInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetChainInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetChainInfo(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetRAMInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetRAMInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetRAMInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetRAMInfo(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetTxByHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TxHashRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetTxByHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetTxByHash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetTxByHash(ctx, req.(*TxHashRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetTxReceiptByTxHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TxHashRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetTxReceiptByTxHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetTxReceiptByTxHash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetTxReceiptByTxHash(ctx, req.(*TxHashRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetBlockByHash_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockByHashRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetBlockByHash(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetBlockByHash",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetBlockByHash(ctx, req.(*GetBlockByHashRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetBlockByNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockByNumberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetBlockByNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetBlockByNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetBlockByNumber(ctx, req.(*GetBlockByNumberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetRawBlockByNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockByNumberRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetRawBlockByNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetRawBlockByNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetRawBlockByNumber(ctx, req.(*GetBlockByNumberRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetBlockHeaderByRange_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBlockHeaderByRangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetBlockHeaderByRange(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetBlockHeaderByRange",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetBlockHeaderByRange(ctx, req.(*GetBlockHeaderByRangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetAccount(ctx, req.(*GetAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetTokenBalance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTokenBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetTokenBalance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetTokenBalance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetTokenBalance(ctx, req.(*GetTokenBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetToken721Balance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTokenBalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetToken721Balance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetToken721Balance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetToken721Balance(ctx, req.(*GetTokenBalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetToken721Metadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetToken721InfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetToken721Metadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetToken721Metadata",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetToken721Metadata(ctx, req.(*GetToken721InfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetToken721Owner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetToken721InfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetToken721Owner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetToken721Owner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetToken721Owner(ctx, req.(*GetToken721InfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetGasRatio_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetGasRatio(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetGasRatio",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetGasRatio(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetProducerVoteInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProducerVoteInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetProducerVoteInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetProducerVoteInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetProducerVoteInfo(ctx, req.(*GetProducerVoteInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetContract_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetContractRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetContract(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetContract",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetContract(ctx, req.(*GetContractRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetContractVote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetContractRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetContractVote(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetContractVote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetContractVote(ctx, req.(*GetContractRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetContractStorage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetContractStorageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetContractStorage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetContractStorage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetContractStorage(ctx, req.(*GetContractStorageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetBatchContractStorage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBatchContractStorageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetBatchContractStorage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetBatchContractStorage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetBatchContractStorage(ctx, req.(*GetBatchContractStorageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_ListContractStorage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListContractStorageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).ListContractStorage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/ListContractStorage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).ListContractStorage(ctx, req.(*ListContractStorageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetContractStorageFields_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetContractStorageFieldsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetContractStorageFields(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetContractStorageFields",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetContractStorageFields(ctx, req.(*GetContractStorageFieldsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_SendTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).SendTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/SendTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).SendTransaction(ctx, req.(*TransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_ExecTransaction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransactionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).ExecTransaction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/ExecTransaction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).ExecTransaction(ctx, req.(*TransactionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_Subscribe_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubscribeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ApiServiceServer).Subscribe(m, &apiServiceSubscribeServer{stream})
}

type ApiService_SubscribeServer interface {
	Send(*SubscribeResponse) error
	grpc.ServerStream
}

type apiServiceSubscribeServer struct {
	grpc.ServerStream
}

func (x *apiServiceSubscribeServer) Send(m *SubscribeResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _ApiService_GetVoterBonus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetVoterBonus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetVoterBonus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetVoterBonus(ctx, req.(*GetAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetCandidateBonus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetCandidateBonus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetCandidateBonus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetCandidateBonus(ctx, req.(*GetAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApiService_GetTokenInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTokenInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApiServiceServer).GetTokenInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpcpb.ApiService/GetTokenInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApiServiceServer).GetTokenInfo(ctx, req.(*GetTokenInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ApiService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpcpb.ApiService",
	HandlerType: (*ApiServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetNodeInfo",
			Handler:    _ApiService_GetNodeInfo_Handler,
		},
		{
			MethodName: "GetChainInfo",
			Handler:    _ApiService_GetChainInfo_Handler,
		},
		{
			MethodName: "GetRAMInfo",
			Handler:    _ApiService_GetRAMInfo_Handler,
		},
		{
			MethodName: "GetTxByHash",
			Handler:    _ApiService_GetTxByHash_Handler,
		},
		{
			MethodName: "GetTxReceiptByTxHash",
			Handler:    _ApiService_GetTxReceiptByTxHash_Handler,
		},
		{
			MethodName: "GetBlockByHash",
			Handler:    _ApiService_GetBlockByHash_Handler,
		},
		{
			MethodName: "GetBlockByNumber",
			Handler:    _ApiService_GetBlockByNumber_Handler,
		},
		{
			MethodName: "GetRawBlockByNumber",
			Handler:    _ApiService_GetRawBlockByNumber_Handler,
		},
		{
			MethodName: "GetBlockHeaderByRange",
			Handler:    _ApiService_GetBlockHeaderByRange_Handler,
		},
		{
			MethodName: "GetAccount",
			Handler:    _ApiService_GetAccount_Handler,
		},
		{
			MethodName: "GetTokenBalance",
			Handler:    _ApiService_GetTokenBalance_Handler,
		},
		{
			MethodName: "GetToken721Balance",
			Handler:    _ApiService_GetToken721Balance_Handler,
		},
		{
			MethodName: "GetToken721Metadata",
			Handler:    _ApiService_GetToken721Metadata_Handler,
		},
		{
			MethodName: "GetToken721Owner",
			Handler:    _ApiService_GetToken721Owner_Handler,
		},
		{
			MethodName: "GetGasRatio",
			Handler:    _ApiService_GetGasRatio_Handler,
		},
		{
			MethodName: "GetProducerVoteInfo",
			Handler:    _ApiService_GetProducerVoteInfo_Handler,
		},
		{
			MethodName: "GetContract",
			Handler:    _ApiService_GetContract_Handler,
		},
		{
			MethodName: "GetContractVote",
			Handler:    _ApiService_GetContractVote_Handler,
		},
		{
			MethodName: "GetContractStorage",
			Handler:    _ApiService_GetContractStorage_Handler,
		},
		{
			MethodName: "GetBatchContractStorage",
			Handler:    _ApiService_GetBatchContractStorage_Handler,
		},
		{
			MethodName: "ListContractStorage",
			Handler:    _ApiService_ListContractStorage_Handler,
		},
		{
			MethodName: "GetContractStorageFields",
			Handler:    _ApiService_GetContractStorageFields_Handler,
		},
		{
			MethodName: "SendTransaction",
			Handler:    _ApiService_SendTransaction_Handler,
		},
		{
			MethodName: "ExecTransaction",
			Handler:    _ApiService_ExecTransaction_Handler,
		},
		{
			MethodName: "GetVoterBonus",
			Handler:    _ApiService_GetVoterBonus_Handler,
		},
		{
			MethodName: "GetCandidateBonus",
			Handler:    _ApiService_GetCandidateBonus_Handler,
		},
		{
			MethodName: "GetTokenInfo",
			Handler:    _ApiService_GetTokenInfo_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Subscribe",
			Handler:       _ApiService_Subscribe_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "rpc/pb/rpc.proto",
}
